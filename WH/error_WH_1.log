Mon Nov 11 22:52:10 CST 2019
XXX: mpirun
  -> SHERPA path: '/cvmfs/cms.cern.ch/slc6_amd64_gcc700/external/sherpa/2.2.8'
  -> SHERPA run path: '/home/pku/xiaoj/sherpa/sherpaday20191111/CMSSW_10_2_18/src/MY/PROJECT/python/SHERPATMP_WH_1'
  -> PROCESS name: 'WH_1'
  -> Library & cross section otions: 'LBCR'
  -> include path: '/home/pku/xiaoj/sherpa/sherpaday20191111/CMSSW_10_2_18/src/MY/PROJECT/python'
  -> custom data card file name: ''
  -> custom library file name: ''
  -> custom cross section file name: ''
  -> output path: '/home/pku/xiaoj/sherpa/sherpaday20191111/CMSSW_10_2_18/src/MY/PROJECT/python'
  -> MPI running command: 'mpirun'
  -> additional MPI options: '-n 30 '
  -> No. of events: '0'
 <I> multiple CPU cores detected: 33-1
 path '/home/pku/xiaoj/sherpa/sherpaday20191111/CMSSW_10_2_18/src/MY/PROJECT/python/SHERPATMP_WH_1/TMP' does not exist,
  -> creating path '/home/pku/xiaoj/sherpa/sherpaday20191111/CMSSW_10_2_18/src/MY/PROJECT/python/SHERPATMP_WH_1/TMP'
 <I> using AMEGIC ME generator
 <I> using OpenLoops as loop generator
 <I> NO OL_PREFIX specified in RunCard.
 <I> Will use OL_PREFIX=/cvmfs/cms.cern.ch/slc6_amd64_gcc700/external/openloops/2.1.0
 'Process' subdirectory does not exist and will be created
 'Result' subdirectory does not exist and will be created
 <I> Sherpa executable is /cvmfs/cms.cern.ch/slc6_amd64_gcc700/external/sherpa/2.2.8/bin/Sherpa
 <I> creating library code...
     ...Logs stored in /home/pku/xiaoj/sherpa/sherpaday20191111/CMSSW_10_2_18/src/MY/PROJECT/python/SHERPATMP_WH_1/sherpa_WH_1_passLBCR.out and /home/pku/xiaoj/sherpa/sherpaday20191111/CMSSW_10_2_18/src/MY/PROJECT/python/SHERPATMP_WH_1/sherpa_WH_1_passLBCR.err.
Welcome to Sherpa, xiaoj. Initialization of framework underway.
The local time is Mon Nov 11 22:52:11 2019.
Run_Parameter::Init(): Seed mode '*'
Run_Parameter::Init(): Setting memory limit to 125.828 GB.
Random::SetSeed(): Seed set to 1234
-----------------------------------------------------------------------------
-----------    Event generation run with SHERPA started .......   -----------
-----------------------------------------------------------------------------
................................................ |       +                   
................................................ ||  |       +  +            
...................................        ....  | |         /   +           
................. ................   _,_ |  ....  ||         +|  +  +        
...............................  __.'  ,\|  ...  ||    /    +|          +    
.............................. (  \    \   ...  | |  |   + + \         +   
.............................  (    \   -/  .... ||       +    |          +  
........ ...................  <S   /()))))~~~~~~~~##     +     /\    +       
............................ (!H   (~~)))))~~~~~~#/     +  +    |  +         
................ ........... (!E   (~~~)))))     /|/    +         +          
............................ (!R   (~~~)))))   |||   + +            +        
..... ...................... (!P    (~~~~)))   /|  + +          +            
............................ (!A>    (~~~~~~~~~##        + +        +        
............................. ~~(!    '~~~~~~~ \       +     + +      +      
...............................  `~~~QQQQQDb //   |         + + +        +   
........................ ..........   IDDDDP||     \  + + + + +             +
....................................  IDDDI||       \                      + 
.................................... IHD HD||         \ + +  + + + + +      +
...................................  IHD ##|            :-) + +\          +  
......... ............... ......... IHI ## /      /   +  + + + +\       +    
................................... IHI/ /       /      + + + +        +     
................................... ## | | /    / + +      + + /      +      
....................... /TT\ .....  ##/ ///  / + + + + + + +/       +        
......................./TTT/T\ ... /TT\/\\\ / + + + + + + +/   \         +   
....................../TTT/TTTT\...|TT/T\\\/   +    ++  + /              
-----------------------------------------------------------------------------

     SHERPA version 2.2.8 (Cho Oyu)
                                                                             
     Authors:        Enrico Bothmann, Stefan Hoeche, Frank Krauss,           
                     Silvan Kuttimalai, Marek Schoenherr, Holger Schulz,     
                     Steffen Schumann, Frank Siegert, Korinna Zapp           
     Former Authors: Timo Fischer, Tanju Gleisberg, Hendrik Hoeth,           
                     Ralf Kuhn, Thomas Laubrich, Andreas Schaelicke,         
                     Jan Winter                                              
                                                                             
     This program uses a lot of genuine and original research work           
     by other people. Users are encouraged to refer to                       
     the various original publications.                                      
                                                                             
     Users are kindly asked to refer to the documentation                    
     published under JHEP 02(2009)007                                        
                                                                             
     Please visit also our homepage                                          
                                                                             
       http://sherpa.hepforge.org                                            
                                                                             
     for news, bugreports, updates and new releases.                         
                                                                             
-----------------------------------------------------------------------------

WARNING: You are using an unsupported development branch.
Git branch master, revision ed059288d7809e55cf78f39ffb28b1c3d1ba6866.

Beam_Spectra_Handler : 
   type = Monochromatic*Monochromatic
   for    P+  ((6500,0,0,6500))
   and    P+  ((6500,0,0,-6500))
WARNING: M_TOP=0  replacing with SHERPA top mass: M_TOP=173.21
PDF set 'NNPDF30NNLO' loaded for beam 1 (P+).
WARNING: M_TOP=0  replacing with SHERPA top mass: M_TOP=173.21
PDF set 'NNPDF30NNLO' loaded for beam 2 (P+).
Initialized the ISR: (SF)*(SF)
WARNING: M_TOP=0  replacing with SHERPA top mass: M_TOP=173.21
WARNING: M_TOP=0  replacing with SHERPA top mass: M_TOP=173.21
One_Running_AlphaS::One_Running_AlphaS() {
  Setting \alpha_s according to PDF
  perturbative order 2
  \alpha_s(M_Z) = 0.118
}
One_Running_AlphaS::One_Running_AlphaS() {
  Setting \alpha_s according to PDF
  perturbative order 2
  \alpha_s(M_Z) = 0.118
}
 List of Particle Data 
  IDName     kfc  MASS[<kfc>]   WIDTH[<kfc>]  STABLE[<kfc>] MASSIVE[<kfc>]  ACTIVE[<kfc>]  YUKAWA[<kfc>]
       d       1         0.01              0              1              0              1              0
       u       2        0.005              0              1              0              1              0
       s       3          0.2              0              1              0              1              0
       c       4         1.42              0              1              0              1              0
       b       5          4.8              0              1              0              1              0
       t       6       173.21              2              0              1              1         173.21
      e-      11     0.000511              0              1              0              1              0
      ve      12            0              0              1              0              1              0
     mu-      13        0.105              0              1              0              1              0
     vmu      14            0              0              1              0              1              0
    tau-      15        1.777    2.26735e-12              0              0              1              0
    vtau      16            0              0              1              0              1              0
       G      21            0              0              1              0              1              0
       P      22            0              0              1              0              1              0
       Z      23      91.1876         2.4952              0              1              1        91.1876
      W+      24       80.385          2.085              0              1              1         80.385
      h0      25          125        0.00407              0              1              1            125

 List of Particle Containers 
    IDName     kfc     Constituents
         l      90     {e-,e+,mu-,mu+,tau-,tau+}
         v      91     {ve,veb,vmu,vmub,vtau,vtaub}
         j      93     {d,db,u,ub,s,sb,c,cb,b,bb,G}
         Q      94     {d,db,u,ub,s,sb,c,cb,b,bb}
         r      99     {d,db,u,ub,s,sb,c,cb,b,bb,G}

Initialized the Fragmentation_Handler.
Initialized the Soft_Collision_Handler.
CS_Shower::CS_Shower(): Set respect Q2 mode 0
CS_Shower::CS_Shower(): Set color setter mode 0
CS_Shower::CS_Shower(): Set respect Q2 mode 0
CS_Shower::CS_Shower(): Set color setter mode 0
Initialized the Shower_Handler.
+-----------------------------------------+
|   X   X   X XXXX  XXX  XXX  XXX         |
|  X X  XX XX X    X      X  X     X   X  |
| X   X X X X XXX  X XXX  X  X    XXX XXX |
| XXXXX X   X X    X   X  X  X     X   X  |
| X   X X   X XXXX  XXX  XXX  XXX         |
+-----------------------------------------+
| please cite: JHEP 0202:044,2002         |
+-----------------------------------------+
ME_Generators::ME_Generators(): Try loading 'OpenLoops' from 'libSherpaOpenLoops'.
ME_Generator_Base::SetPSMasses(): Massive PS flavours for Comix: (c,cb,b,bb,e-,e+,mu-,mu+,tau-,tau+)
+----------------------------------+
|                                  |
|      [31mCCC[0m  [32mOOO[0m  [34mM[0m   [34mM[0m I [33mX[0m   [33mX[0m     |
|     [31mC[0m    [32mO[0m   [32mO[0m [34mMM[0m [34mMM[0m I  [33mX[0m [33mX[0m      |
|     [31mC[0m    [32mO[0m   [32mO[0m [34mM[0m [34mM[0m [34mM[0m I   [33mX[0m       |
|     [31mC[0m    [32mO[0m   [32mO[0m [34mM[0m   [34mM[0m I  [33mX[0m [33mX[0m      |
|      [31mCCC[0m  [32mOOO[0m  [34mM[0m   [34mM[0m I [33mX[0m   [33mX[0m     |
|                                  |
+==================================+
|  Color dressed  Matrix Elements  |
|     http://comix.freacafe.de     |
|   please cite  JHEP12(2008)039   |
+----------------------------------+
ME_Generator_Base::SetPSMasses(): Massive PS flavours for Amegic: (c,cb,b,bb,e-,e+,mu-,mu+,tau-,tau+)
Amegic::Initialize(): Set gauge 1.
Initialising OpenLoops generator from /cvmfs/cms.cern.ch/slc6_amd64_gcc700/external/openloops/2.1.0
####################################################################
#        ___  ___  ____  _  _       __   __  ___   __    ___       #
#       /   \ |__| |__   |\ |  |   /  \ /  \ |__| /__    __/       #
#       \___/ |    |___  | \|  |__ \__/ \__/ |    __/   /__        #
#       You are using OpenLoops 2 to evaluate loop amplitudes      #
#        F. Buccioni, J.-N. Lang, J. Lindert, P. Maierhoefer,      #
#               S. Pozzorini, M. Zoller, H. Zhang                  #
#                Eur.Phys.J. C78 (2018) no.1, 70                   #
####################################################################
Matrix_Element_Handler::BuildProcesses(): Looking for processes ................................................................................ done ( 84 MB, 32m 27s / 22m 57s ).
Matrix_Element_Handler::InitializeProcesses(): Performing tests 
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.                                                            
         *******************************************        
         *              C O L L I E R              *        
         *                                         *        
         *        Complex One-Loop Library         *        
         *      In Extended Regularizations        *        
         *                                         *        
         *    by A.Denner, S.Dittmaier, L.Hofer    *        
         *                                         *        
         *              version 1.2.4              *        
         *                                         *        
         *******************************************        
                                                            
 done ( 85 MB, 0s / 0s ).
Initialized the Matrix_Element_Handler for the hard processes.
Initialized the Beam_Remnant_Handler.
Initialized the Soft_Photon_Handler.
[31mVariations::InitialiseParametersVector([32m0 variations[31m)[0m[31m{[0m
  Named variations:
[31m}[0m
[1mSherpa: [0m[34mSherpa::InitializeTheRun[0m throws [1m[31mnormal exit[0m[1m: 
   [0m[31mInitialization complete.[0m
WARNING: You are using an unsupported development branch.
------------------------------------------------------------------------
[1mPlease cite the publications listed in '[31mSherpa_References.tex[0m[1m'.[0m
  Extract the bibtex list by running 'get_bibtex Sherpa_References.tex'
  or email the file to 'slaclib2@slac.stanford.edu', subject 'generate'.
------------------------------------------------------------------------
Thanks for using LHAPDF 6.2.1. Please make sure to cite the paper:
  Eur.Phys.J. C75 (2015) 3, 132  (http://arxiv.org/abs/1412.7420)
 <I> compiling libraries...
     ...Logs stored in /home/pku/xiaoj/sherpa/sherpaday20191111/CMSSW_10_2_18/src/MY/PROJECT/python/SHERPATMP_WH_1/sherpa_WH_1_mklib.out and /home/pku/xiaoj/sherpa/sherpaday20191111/CMSSW_10_2_18/src/MY/PROJECT/python/SHERPATMP_WH_1/sherpa_WH_1_mklib.err.
./MakeSherpaLibs.sh: line 478: ./makelibs: No such file or directory
 <I>  -> raw size: 14M
 <I> cleaning libraries...
     ...Logs stored in /home/pku/xiaoj/sherpa/sherpaday20191111/CMSSW_10_2_18/src/MY/PROJECT/python/SHERPATMP_WH_1/sherpa_WH_1_cllib.out and /home/pku/xiaoj/sherpa/sherpaday20191111/CMSSW_10_2_18/src/MY/PROJECT/python/SHERPATMP_WH_1/sherpa_WH_1_cllib.err.
 <I>  -> clean size: 14M
 <I> re-invoking Sherpa for futher library/cross section calculation...
     ...Logs stored in /home/pku/xiaoj/sherpa/sherpaday20191111/CMSSW_10_2_18/src/MY/PROJECT/python/SHERPATMP_WH_1/sherpa_WH_1_passLBCR.out and /home/pku/xiaoj/sherpa/sherpaday20191111/CMSSW_10_2_18/src/MY/PROJECT/python/SHERPATMP_WH_1/sherpa_WH_1_passLBCR.err.
Welcome to Sherpa, xiaoj. Initialization of framework underway.
The local time is Mon Nov 11 23:24:40 2019.
Run_Parameter::Init(): Seed mode '*'
Run_Parameter::Init(): Setting memory limit to 125.828 GB.
Random::SetSeed(): Seed set to 1234
-----------------------------------------------------------------------------
-----------    Event generation run with SHERPA started .......   -----------
-----------------------------------------------------------------------------
................................................ |       +                   
................................................ ||  |       +  +            
...................................        ....  | |         /   +           
................. ................   _,_ |  ....  ||         +|  +  +        
...............................  __.'  ,\|  ...  ||    /    +|          +    
.............................. (  \    \   ...  | |  |   + + \         +   
.............................  (    \   -/  .... ||       +    |          +  
........ ...................  <S   /()))))~~~~~~~~##     +     /\    +       
............................ (!H   (~~)))))~~~~~~#/     +  +    |  +         
................ ........... (!E   (~~~)))))     /|/    +         +          
............................ (!R   (~~~)))))   |||   + +            +        
..... ...................... (!P    (~~~~)))   /|  + +          +            
............................ (!A>    (~~~~~~~~~##        + +        +        
............................. ~~(!    '~~~~~~~ \       +     + +      +      
...............................  `~~~QQQQQDb //   |         + + +        +   
........................ ..........   IDDDDP||     \  + + + + +             +
....................................  IDDDI||       \                      + 
.................................... IHD HD||         \ + +  + + + + +      +
...................................  IHD ##|            :-) + +\          +  
......... ............... ......... IHI ## /      /   +  + + + +\       +    
................................... IHI/ /       /      + + + +        +     
................................... ## | | /    / + +      + + /      +      
....................... /TT\ .....  ##/ ///  / + + + + + + +/       +        
......................./TTT/T\ ... /TT\/\\\ / + + + + + + +/   \         +   
....................../TTT/TTTT\...|TT/T\\\/   +    ++  + /              
-----------------------------------------------------------------------------

     SHERPA version 2.2.8 (Cho Oyu)
                                                                             
     Authors:        Enrico Bothmann, Stefan Hoeche, Frank Krauss,           
                     Silvan Kuttimalai, Marek Schoenherr, Holger Schulz,     
                     Steffen Schumann, Frank Siegert, Korinna Zapp           
     Former Authors: Timo Fischer, Tanju Gleisberg, Hendrik Hoeth,           
                     Ralf Kuhn, Thomas Laubrich, Andreas Schaelicke,         
                     Jan Winter                                              
                                                                             
     This program uses a lot of genuine and original research work           
     by other people. Users are encouraged to refer to                       
     the various original publications.                                      
                                                                             
     Users are kindly asked to refer to the documentation                    
     published under JHEP 02(2009)007                                        
                                                                             
     Please visit also our homepage                                          
                                                                             
       http://sherpa.hepforge.org                                            
                                                                             
     for news, bugreports, updates and new releases.                         
                                                                             
-----------------------------------------------------------------------------

WARNING: You are using an unsupported development branch.
Git branch master, revision ed059288d7809e55cf78f39ffb28b1c3d1ba6866.

Beam_Spectra_Handler : 
   type = Monochromatic*Monochromatic
   for    P+  ((6500,0,0,6500))
   and    P+  ((6500,0,0,-6500))
WARNING: M_TOP=0  replacing with SHERPA top mass: M_TOP=173.21
PDF set 'NNPDF30NNLO' loaded for beam 1 (P+).
WARNING: M_TOP=0  replacing with SHERPA top mass: M_TOP=173.21
PDF set 'NNPDF30NNLO' loaded for beam 2 (P+).
Initialized the ISR: (SF)*(SF)
WARNING: M_TOP=0  replacing with SHERPA top mass: M_TOP=173.21
WARNING: M_TOP=0  replacing with SHERPA top mass: M_TOP=173.21
One_Running_AlphaS::One_Running_AlphaS() {
  Setting \alpha_s according to PDF
  perturbative order 2
  \alpha_s(M_Z) = 0.118
}
One_Running_AlphaS::One_Running_AlphaS() {
  Setting \alpha_s according to PDF
  perturbative order 2
  \alpha_s(M_Z) = 0.118
}
 List of Particle Data 
  IDName     kfc  MASS[<kfc>]   WIDTH[<kfc>]  STABLE[<kfc>] MASSIVE[<kfc>]  ACTIVE[<kfc>]  YUKAWA[<kfc>]
       d       1         0.01              0              1              0              1              0
       u       2        0.005              0              1              0              1              0
       s       3          0.2              0              1              0              1              0
       c       4         1.42              0              1              0              1              0
       b       5          4.8              0              1              0              1              0
       t       6       173.21              2              0              1              1         173.21
      e-      11     0.000511              0              1              0              1              0
      ve      12            0              0              1              0              1              0
     mu-      13        0.105              0              1              0              1              0
     vmu      14            0              0              1              0              1              0
    tau-      15        1.777    2.26735e-12              0              0              1              0
    vtau      16            0              0              1              0              1              0
       G      21            0              0              1              0              1              0
       P      22            0              0              1              0              1              0
       Z      23      91.1876         2.4952              0              1              1        91.1876
      W+      24       80.385          2.085              0              1              1         80.385
      h0      25          125        0.00407              0              1              1            125

 List of Particle Containers 
    IDName     kfc     Constituents
         l      90     {e-,e+,mu-,mu+,tau-,tau+}
         v      91     {ve,veb,vmu,vmub,vtau,vtaub}
         j      93     {d,db,u,ub,s,sb,c,cb,b,bb,G}
         Q      94     {d,db,u,ub,s,sb,c,cb,b,bb}
         r      99     {d,db,u,ub,s,sb,c,cb,b,bb,G}

Initialized the Fragmentation_Handler.
Initialized the Soft_Collision_Handler.
CS_Shower::CS_Shower(): Set respect Q2 mode 0
CS_Shower::CS_Shower(): Set color setter mode 0
CS_Shower::CS_Shower(): Set respect Q2 mode 0
CS_Shower::CS_Shower(): Set color setter mode 0
Initialized the Shower_Handler.
+-----------------------------------------+
|   X   X   X XXXX  XXX  XXX  XXX         |
|  X X  XX XX X    X      X  X     X   X  |
| X   X X X X XXX  X XXX  X  X    XXX XXX |
| XXXXX X   X X    X   X  X  X     X   X  |
| X   X X   X XXXX  XXX  XXX  XXX         |
+-----------------------------------------+
| please cite: JHEP 0202:044,2002         |
+-----------------------------------------+
ME_Generators::ME_Generators(): Try loading 'OpenLoops' from 'libSherpaOpenLoops'.
ME_Generator_Base::SetPSMasses(): Massive PS flavours for Comix: (c,cb,b,bb,e-,e+,mu-,mu+,tau-,tau+)
+----------------------------------+
|                                  |
|      [31mCCC[0m  [32mOOO[0m  [34mM[0m   [34mM[0m I [33mX[0m   [33mX[0m     |
|     [31mC[0m    [32mO[0m   [32mO[0m [34mMM[0m [34mMM[0m I  [33mX[0m [33mX[0m      |
|     [31mC[0m    [32mO[0m   [32mO[0m [34mM[0m [34mM[0m [34mM[0m I   [33mX[0m       |
|     [31mC[0m    [32mO[0m   [32mO[0m [34mM[0m   [34mM[0m I  [33mX[0m [33mX[0m      |
|      [31mCCC[0m  [32mOOO[0m  [34mM[0m   [34mM[0m I [33mX[0m   [33mX[0m     |
|                                  |
+==================================+
|  Color dressed  Matrix Elements  |
|     http://comix.freacafe.de     |
|   please cite  JHEP12(2008)039   |
+----------------------------------+
ME_Generator_Base::SetPSMasses(): Massive PS flavours for Amegic: (c,cb,b,bb,e-,e+,mu-,mu+,tau-,tau+)
Amegic::Initialize(): Set gauge 1.
Initialising OpenLoops generator from /cvmfs/cms.cern.ch/slc6_amd64_gcc700/external/openloops/2.1.0
####################################################################
#        ___  ___  ____  _  _       __   __  ___   __    ___       #
#       /   \ |__| |__   |\ |  |   /  \ /  \ |__| /__    __/       #
#       \___/ |    |___  | \|  |__ \__/ \__/ |    __/   /__        #
#       You are using OpenLoops 2 to evaluate loop amplitudes      #
#        F. Buccioni, J.-N. Lang, J. Lindert, P. Maierhoefer,      #
#               S. Pozzorini, M. Zoller, H. Zhang                  #
#                Eur.Phys.J. C78 (2018) no.1, 70                   #
####################################################################
Matrix_Element_Handler::BuildProcesses(): Looking for processes ................................................................................ done ( 46 MB, 0s / 0s ).
Matrix_Element_Handler::InitializeProcesses(): Performing tests 
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.                                                            
         *******************************************        
         *              C O L L I E R              *        
         *                                         *        
         *        Complex One-Loop Library         *        
         *      In Extended Regularizations        *        
         *                                         *        
         *    by A.Denner, S.Dittmaier, L.Hofer    *        
         *                                         *        
         *              version 1.2.4              *        
         *                                         *        
         *******************************************        
                                                            
 done ( 46 MB, 0s / 0s ).
Initialized the Matrix_Element_Handler for the hard processes.
Initialized the Beam_Remnant_Handler.
Initialized the Soft_Photon_Handler.
[31mVariations::InitialiseParametersVector([32m0 variations[31m)[0m[31m{[0m
  Named variations:
[31m}[0m
[1mSherpa: [0m[34mSherpa::InitializeTheRun[0m throws [1m[31mnormal exit[0m[1m: 
   [0m[31mInitialization complete.[0m
WARNING: You are using an unsupported development branch.
------------------------------------------------------------------------
[1mPlease cite the publications listed in '[31mSherpa_References.tex[0m[1m'.[0m
  Extract the bibtex list by running 'get_bibtex Sherpa_References.tex'
  or email the file to 'slaclib2@slac.stanford.edu', subject 'generate'.
------------------------------------------------------------------------
Thanks for using LHAPDF 6.2.1. Please make sure to cite the paper:
  Eur.Phys.J. C75 (2015) 3, 132  (http://arxiv.org/abs/1412.7420)
 <I> calculating cross sections... Logs stored in /home/pku/xiaoj/sherpa/sherpaday20191111/CMSSW_10_2_18/src/MY/PROJECT/python/SHERPATMP_WH_1/sherpa_WH_1_passLBCR.out and /home/pku/xiaoj/sherpa/sherpaday20191111/CMSSW_10_2_18/src/MY/PROJECT/python/SHERPATMP_WH_1/sherpa_WH_1_passLBCR.err.
 <I> ...using MPI
Welcome to Sherpa, xiaoj. Initialization of framework underway.
The local time is Mon Nov 11 23:24:42 2019.
Run_Parameter::Init(): Seed mode '*'
Run_Parameter::Init(): Setting memory limit to 125.828 GB.
Random::SetSeed(): Seed set to 1234
My_MPI::PrintRankInfo(): Running on 30 ranks.
-----------------------------------------------------------------------------
-----------    Event generation run with SHERPA started .......   -----------
-----------------------------------------------------------------------------
................................................ |       +                   
................................................ ||  |       +  +            
...................................        ....  | |         /   +           
................. ................   _,_ |  ....  ||         +|  +  +        
...............................  __.'  ,\|  ...  ||    /    +|          +    
.............................. (  \    \   ...  | |  |   + + \         +   
.............................  (    \   -/  .... ||       +    |          +  
........ ...................  <S   /()))))~~~~~~~~##     +     /\    +       
............................ (!H   (~~)))))~~~~~~#/     +  +    |  +         
................ ........... (!E   (~~~)))))     /|/    +         +          
............................ (!R   (~~~)))))   |||   + +            +        
..... ...................... (!P    (~~~~)))   /|  + +          +            
............................ (!A>    (~~~~~~~~~##        + +        +        
............................. ~~(!    '~~~~~~~ \       +     + +      +      
...............................  `~~~QQQQQDb //   |         + + +        +   
........................ ..........   IDDDDP||     \  + + + + +             +
....................................  IDDDI||       \                      + 
.................................... IHD HD||         \ + +  + + + + +      +
...................................  IHD ##|            :-) + +\          +  
......... ............... ......... IHI ## /      /   +  + + + +\       +    
................................... IHI/ /       /      + + + +        +     
................................... ## | | /    / + +      + + /      +      
....................... /TT\ .....  ##/ ///  / + + + + + + +/       +        
......................./TTT/T\ ... /TT\/\\\ / + + + + + + +/   \         +   
....................../TTT/TTTT\...|TT/T\\\/   +    ++  + /              
-----------------------------------------------------------------------------

     SHERPA version 2.2.8 (Cho Oyu)
                                                                             
     Authors:        Enrico Bothmann, Stefan Hoeche, Frank Krauss,           
                     Silvan Kuttimalai, Marek Schoenherr, Holger Schulz,     
                     Steffen Schumann, Frank Siegert, Korinna Zapp           
     Former Authors: Timo Fischer, Tanju Gleisberg, Hendrik Hoeth,           
                     Ralf Kuhn, Thomas Laubrich, Andreas Schaelicke,         
                     Jan Winter                                              
                                                                             
     This program uses a lot of genuine and original research work           
     by other people. Users are encouraged to refer to                       
     the various original publications.                                      
                                                                             
     Users are kindly asked to refer to the documentation                    
     published under JHEP 02(2009)007                                        
                                                                             
     Please visit also our homepage                                          
                                                                             
       http://sherpa.hepforge.org                                            
                                                                             
     for news, bugreports, updates and new releases.                         
                                                                             
-----------------------------------------------------------------------------

WARNING: You are using an unsupported development branch.
Git branch master, revision ed059288d7809e55cf78f39ffb28b1c3d1ba6866.

Beam_Spectra_Handler : 
   type = Monochromatic*Monochromatic
   for    P+  ((6500,0,0,6500))
   and    P+  ((6500,0,0,-6500))
WARNING: M_TOP=0  replacing with SHERPA top mass: M_TOP=173.21
PDF set 'NNPDF30NNLO' loaded for beam 1 (P+).
WARNING: M_TOP=0  replacing with SHERPA top mass: M_TOP=173.21
PDF set 'NNPDF30NNLO' loaded for beam 2 (P+).
Initialized the ISR: (SF)*(SF)
WARNING: M_TOP=0  replacing with SHERPA top mass: M_TOP=173.21
WARNING: M_TOP=0  replacing with SHERPA top mass: M_TOP=173.21
One_Running_AlphaS::One_Running_AlphaS() {
  Setting \alpha_s according to PDF
  perturbative order 2
  \alpha_s(M_Z) = 0.118
}
One_Running_AlphaS::One_Running_AlphaS() {
  Setting \alpha_s according to PDF
  perturbative order 2
  \alpha_s(M_Z) = 0.118
}
 List of Particle Data 
  IDName     kfc  MASS[<kfc>]   WIDTH[<kfc>]  STABLE[<kfc>] MASSIVE[<kfc>]  ACTIVE[<kfc>]  YUKAWA[<kfc>]
       d       1         0.01              0              1              0              1              0
       u       2        0.005              0              1              0              1              0
       s       3          0.2              0              1              0              1              0
       c       4         1.42              0              1              0              1              0
       b       5          4.8              0              1              0              1              0
       t       6       173.21              2              0              1              1         173.21
      e-      11     0.000511              0              1              0              1              0
      ve      12            0              0              1              0              1              0
     mu-      13        0.105              0              1              0              1              0
     vmu      14            0              0              1              0              1              0
    tau-      15        1.777    2.26735e-12              0              0              1              0
    vtau      16            0              0              1              0              1              0
       G      21            0              0              1              0              1              0
       P      22            0              0              1              0              1              0
       Z      23      91.1876         2.4952              0              1              1        91.1876
      W+      24       80.385          2.085              0              1              1         80.385
      h0      25          125        0.00407              0              1              1            125

 List of Particle Containers 
    IDName     kfc     Constituents
         l      90     {e-,e+,mu-,mu+,tau-,tau+}
         v      91     {ve,veb,vmu,vmub,vtau,vtaub}
         j      93     {d,db,u,ub,s,sb,c,cb,b,bb,G}
         Q      94     {d,db,u,ub,s,sb,c,cb,b,bb}
         r      99     {d,db,u,ub,s,sb,c,cb,b,bb,G}

CS_Shower::CS_Shower(): Set respect Q2 mode 0
CS_Shower::CS_Shower(): Set color setter mode 0
CS_Shower::CS_Shower(): Set respect Q2 mode 0
CS_Shower::CS_Shower(): Set color setter mode 0
Initialized the Shower_Handler.
+-----------------------------------------+
|   X   X   X XXXX  XXX  XXX  XXX         |
|  X X  XX XX X    X      X  X     X   X  |
| X   X X X X XXX  X XXX  X  X    XXX XXX |
| XXXXX X   X X    X   X  X  X     X   X  |
| X   X X   X XXXX  XXX  XXX  XXX         |
+-----------------------------------------+
| please cite: JHEP 0202:044,2002         |
+-----------------------------------------+
ME_Generators::ME_Generators(): Try loading 'OpenLoops' from 'libSherpaOpenLoops'.
ME_Generator_Base::SetPSMasses(): Massive PS flavours for Comix: (c,cb,b,bb,e-,e+,mu-,mu+,tau-,tau+)
+----------------------------------+
|                                  |
|      [31mCCC[0m  [32mOOO[0m  [34mM[0m   [34mM[0m I [33mX[0m   [33mX[0m     |
|     [31mC[0m    [32mO[0m   [32mO[0m [34mMM[0m [34mMM[0m I  [33mX[0m [33mX[0m      |
|     [31mC[0m    [32mO[0m   [32mO[0m [34mM[0m [34mM[0m [34mM[0m I   [33mX[0m       |
|     [31mC[0m    [32mO[0m   [32mO[0m [34mM[0m   [34mM[0m I  [33mX[0m [33mX[0m      |
|      [31mCCC[0m  [32mOOO[0m  [34mM[0m   [34mM[0m I [33mX[0m   [33mX[0m     |
|                                  |
+==================================+
|  Color dressed  Matrix Elements  |
|     http://comix.freacafe.de     |
|   please cite  JHEP12(2008)039   |
+----------------------------------+
ME_Generator_Base::SetPSMasses(): Massive PS flavours for Amegic: (c,cb,b,bb,e-,e+,mu-,mu+,tau-,tau+)
Amegic::Initialize(): Set gauge 1.
Initialising OpenLoops generator from /cvmfs/cms.cern.ch/slc6_amd64_gcc700/external/openloops/2.1.0
####################################################################
#        ___  ___  ____  _  _       __   __  ___   __    ___       #
#       /   \ |__| |__   |\ |  |   /  \ /  \ |__| /__    __/       #
#       \___/ |    |___  | \|  |__ \__/ \__/ |    __/   /__        #
#       You are using OpenLoops 2 to evaluate loop amplitudes      #
#        F. Buccioni, J.-N. Lang, J. Lindert, P. Maierhoefer,      #
#               S. Pozzorini, M. Zoller, H. Zhang                  #
#                Eur.Phys.J. C78 (2018) no.1, 70                   #
####################################################################
Matrix_Element_Handler::BuildProcesses(): Looking for processes ................................................................................ done ( 44 MB, 0s / 0s ).
Matrix_Element_Handler::InitializeProcesses(): Performing tests 
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.                                                            
         *******************************************        
         *              C O L L I E R              *        
         *                                         *        
         *        Complex One-Loop Library         *        
         *      In Extended Regularizations        *        
         *                                         *        
         *    by A.Denner, S.Dittmaier, L.Hofer    *        
         *                                         *        
         *              version 1.2.4              *        
         *                                         *        
         *******************************************        
                                                            
 done ( 45 MB, 0s / 0s ).
Initialized the Matrix_Element_Handler for the hard processes.
Initialized the Beam_Remnant_Handler.
Process_Group::CalculateTotalXSec(): Calculate xs for '2_6__j__j__h0[W+[l__v]__W-[j__j]]__W+[l__v]' (Comix)
Starting the calculation at 23:24:43. Lean back and enjoy ... .
  
  [1mException_Handler::SignalHandler: [0m[34mSignal [0m[1m([31m11[0m[1m)[0m[34m caught. [0m
  [1mException_Handler::GenerateStackTrace(..): [0m[34mGenerating stack trace [0m[1m
  {[0m
                                                            
         *******************************************        
         *              C O L L I E R              *        
         *                                         *        
         *        Complex One-Loop Library         *        
         *      In Extended Regularizations        *        
         *                                         *        
         *    by A.Denner, S.Dittmaier, L.Hofer    *        
         *                                         *        
         *              version 1.2.4              *        
         *                                         *        
         *******************************************        
                                                            
    0x7f51f9a9485a  in '[31mCOMIX::Cluster_Algorithm::GetMeasure(unsigned long const&, unsigned long const&, unsigned long const&, ATOOLS::Flavour const&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&, int)[0m' ([36mCluster_Algorithm.C:145[0m)
                                                            
         *******************************************        
         *              C O L L I E R              *        
         *                                         *        
         *        Complex One-Loop Library         *        
         *      In Extended Regularizations        *        
         *                                         *        
         *    by A.Denner, S.Dittmaier, L.Hofer    *        
         *                                         *        
         *              version 1.2.4              *        
         *                                         *        
         *******************************************        
                                                            
                                                            
         *******************************************        
         *              C O L L I E R              *        
         *                                         *        
         *        Complex One-Loop Library         *        
         *      In Extended Regularizations        *        
         *                                         *        
         *    by A.Denner, S.Dittmaier, L.Hofer    *        
         *                                         *        
         *              version 1.2.4              *        
         *                                         *        
         *******************************************        
                                                            
                                                            
         *******************************************        
         *              C O L L I E R              *        
         *                                         *        
         *        Complex One-Loop Library         *        
         *      In Extended Regularizations        *        
         *                                         *        
         *    by A.Denner, S.Dittmaier, L.Hofer    *        
         *                                         *        
         *              version 1.2.4              *        
         *                                         *        
         *******************************************        
                                                            
    0x7f51f9a980fe  in '[31mCOMIX::Cluster_Algorithm::CalculateMeasures(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&)[0m' ([36mCluster_Algorithm.C:236[0m)
    0x7f51f9a99e63  in '[31mCOMIX::Cluster_Algorithm::ClusterStep(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > >&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> >&, METOOLS::Current*&, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&)[0m' ([36mCluster_Algorithm.C:370[0m)
    0x7f51f9a9c52a  in '[31mCOMIX::Cluster_Algorithm::Cluster(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > > const&, std::vector<std::pair<unsigned long, double>, std::allocator<std::pair<unsigned long, double> > >&, int)[0m' ([36mCluster_Algorithm.C:739[0m)
                                                            
         *******************************************        
         *              C O L L I E R              *        
         *                                         *        
         *        Complex One-Loop Library         *        
         *      In Extended Regularizations        *        
         *                                         *        
         *    by A.Denner, S.Dittmaier, L.Hofer    *        
         *                                         *        
         *              version 1.2.4              *        
         *                                         *        
         *******************************************        
                                                            
    0x7f51f9a9de97  in '[31mCOMIX::Cluster_Algorithm::Cluster(COMIX::Single_Process*, COMIX::Single_Dipole_Term*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mCluster_Algorithm.C:642 (discriminator 2)[0m)
                                                            
         *******************************************        
         *              C O L L I E R              *        
         *                                         *        
         *        Complex One-Loop Library         *        
         *      In Extended Regularizations        *        
         *                                         *        
         *    by A.Denner, S.Dittmaier, L.Hofer    *        
         *                                         *        
         *              version 1.2.4              *        
         *                                         *        
         *******************************************        
                                                            
  [1mException_Handler::GenerateStackTrace(..): [0m[34mGenerating stack trace [0m[1m
  {[0m
    0x7f51f9ad2d84  in '[31mCOMIX::Comix::ClusterConfiguration(PHASIC::Process_Base*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mComix.C:322[0m)
                                                            
         *******************************************        
         *              C O L L I E R              *        
         *                                         *        
         *        Complex One-Loop Library         *        
         *      In Extended Regularizations        *        
         *                                         *        
         *    by A.Denner, S.Dittmaier, L.Hofer    *        
         *                                         *        
         *              version 1.2.4              *        
         *                                         *        
         *******************************************        
                                                            
                                                            
         *******************************************        
         *              C O L L I E R              *        
         *                                         *        
         *        Complex One-Loop Library         *        
         *      In Extended Regularizations        *        
         *                                         *        
         *    by A.Denner, S.Dittmaier, L.Hofer    *        
         *                                         *        
         *              version 1.2.4              *        
         *                                         *        
         *******************************************        
                                                            
  [1mException_Handler::GenerateStackTrace(..): [0m[34mGenerating stack trace [0m[1m
  {[0m
    0x7f07a1a5f85a  in '[31mCOMIX::Cluster_Algorithm::GetMeasure(unsigned long const&, unsigned long const&, unsigned long const&, ATOOLS::Flavour const&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&, int)[0m' ([36mCluster_Algorithm.C:145[0m)
    0x7f51f93f72a8  in '[31mPHASIC::METS_Scale_Setter::CalculateStrict(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:334[0m)
    0x7f85d322885a  in '[31mCOMIX::Cluster_Algorithm::GetMeasure(unsigned long const&, unsigned long const&, unsigned long const&, ATOOLS::Flavour const&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&, int)[0m' ([36mCluster_Algorithm.C:145[0m)
    0x7f07a1a630fe  in '[31mCOMIX::Cluster_Algorithm::CalculateMeasures(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&)[0m' ([36mCluster_Algorithm.C:236[0m)
    0x7f51f93faeba  in '[31mPHASIC::METS_Scale_Setter::Calculate(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:368 (discriminator 5)[0m)
                                                            
         *******************************************        
         *              C O L L I E R              *        
         *                                         *        
         *        Complex One-Loop Library         *        
         *      In Extended Regularizations        *        
         *                                         *        
         *    by A.Denner, S.Dittmaier, L.Hofer    *        
         *                                         *        
         *              version 1.2.4              *        
         *                                         *        
         *******************************************        
                                                            
    0x7f51f93d1194  in '[31mPHASIC::Scale_Setter_Base::CalculateScale(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long)[0m' ([36mScale_Setter_Base.C:191[0m)
    0x7f85d322c0fe  in '[31mCOMIX::Cluster_Algorithm::CalculateMeasures(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&)[0m' ([36mCluster_Algorithm.C:236[0m)
    0x7f07a1a64e63  in '[31mCOMIX::Cluster_Algorithm::ClusterStep(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > >&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> >&, METOOLS::Current*&, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&)[0m' ([36mCluster_Algorithm.C:370[0m)
                                                            
         *******************************************        
         *              C O L L I E R              *        
         *                                         *        
         *        Complex One-Loop Library         *        
         *      In Extended Regularizations        *        
         *                                         *        
         *    by A.Denner, S.Dittmaier, L.Hofer    *        
         *                                         *        
         *              version 1.2.4              *        
         *                                         *        
         *******************************************        
                                                            
    0x7f51f9ac2730  in '[31mCOMIX::Single_Process::Partonic(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, int)[0m' ([36mSingle_Process.C:400[0m)
    0x7f85d322de63  in '[31mCOMIX::Cluster_Algorithm::ClusterStep(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > >&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> >&, METOOLS::Current*&, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&)[0m' ([36mCluster_Algorithm.C:370[0m)
    0x7f07a1a6752a  in '[31mCOMIX::Cluster_Algorithm::Cluster(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > > const&, std::vector<std::pair<unsigned long, double>, std::allocator<std::pair<unsigned long, double> > >&, int)[0m' ([36mCluster_Algorithm.C:739[0m)
    0x7f51f9510beb  in '[31mPHASIC::Single_Process::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mSingle_Process.C:439[0m)
                                                            
         *******************************************        
         *              C O L L I E R              *        
         *                                         *        
         *        Complex One-Loop Library         *        
         *      In Extended Regularizations        *        
         *                                         *        
         *    by A.Denner, S.Dittmaier, L.Hofer    *        
         *                                         *        
         *              version 1.2.4              *        
         *                                         *        
         *******************************************        
                                                            
    0x7f07a1a68e97  in '[31mCOMIX::Cluster_Algorithm::Cluster(COMIX::Single_Process*, COMIX::Single_Dipole_Term*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mCluster_Algorithm.C:642 (discriminator 2)[0m)
    0x7f85d323052a  in '[31mCOMIX::Cluster_Algorithm::Cluster(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > > const&, std::vector<std::pair<unsigned long, double>, std::allocator<std::pair<unsigned long, double> > >&, int)[0m' ([36mCluster_Algorithm.C:739[0m)
                                                            
         *******************************************        
         *              C O L L I E R              *        
         *                                         *        
         *        Complex One-Loop Library         *        
         *      In Extended Regularizations        *        
         *                                         *        
         *    by A.Denner, S.Dittmaier, L.Hofer    *        
         *                                         *        
         *              version 1.2.4              *        
         *                                         *        
         *******************************************        
                                                            
    0x7f51f950063d  in '[31mPHASIC::Process_Group::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mProcess_Group.C:60 (discriminator 2)[0m)
    0x7f85d3231e97  in '[31mCOMIX::Cluster_Algorithm::Cluster(COMIX::Single_Process*, COMIX::Single_Dipole_Term*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mCluster_Algorithm.C:642 (discriminator 2)[0m)
    0x7f07a1a9dd84  in '[31mCOMIX::Comix::ClusterConfiguration(PHASIC::Process_Base*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mComix.C:322[0m)
                                                            
         *******************************************        
         *              C O L L I E R              *        
         *                                         *        
         *        Complex One-Loop Library         *        
         *      In Extended Regularizations        *        
         *                                         *        
         *    by A.Denner, S.Dittmaier, L.Hofer    *        
         *                                         *        
         *              version 1.2.4              *        
         *                                         *        
         *******************************************        
                                                            
                                                            
         *******************************************        
         *              C O L L I E R              *        
         *                                         *        
         *        Complex One-Loop Library         *        
         *      In Extended Regularizations        *        
         *                                         *        
         *    by A.Denner, S.Dittmaier, L.Hofer    *        
         *                                         *        
         *              version 1.2.4              *        
         *                                         *        
         *******************************************        
                                                            
                                                            
         *******************************************        
         *              C O L L I E R              *        
         *                                         *        
         *        Complex One-Loop Library         *        
         *      In Extended Regularizations        *        
         *                                         *        
         *    by A.Denner, S.Dittmaier, L.Hofer    *        
         *                                         *        
         *              version 1.2.4              *        
         *                                         *        
         *******************************************        
                                                            
                                                            
         *******************************************        
         *              C O L L I E R              *        
         *                                         *        
         *        Complex One-Loop Library         *        
         *      In Extended Regularizations        *        
         *                                         *        
         *    by A.Denner, S.Dittmaier, L.Hofer    *        
         *                                         *        
         *              version 1.2.4              *        
         *                                         *        
         *******************************************        
                                                            
                                                            
         *******************************************        
         *              C O L L I E R              *        
         *                                         *        
         *        Complex One-Loop Library         *        
         *      In Extended Regularizations        *        
         *                                         *        
         *    by A.Denner, S.Dittmaier, L.Hofer    *        
         *                                         *        
         *              version 1.2.4              *        
         *                                         *        
         *******************************************        
                                                            
    0x7f51f9580ed9  in '[31mPHASIC::Phase_Space_Handler::CalculateME()[0m' ([36mPhase_Space_Handler.C:251[0m)
                                                            
         *******************************************        
         *              C O L L I E R              *        
         *                                         *        
         *        Complex One-Loop Library         *        
         *      In Extended Regularizations        *        
         *                                         *        
         *    by A.Denner, S.Dittmaier, L.Hofer    *        
         *                                         *        
         *              version 1.2.4              *        
         *                                         *        
         *******************************************        
                                                            
                                                            
         *******************************************        
         *              C O L L I E R              *        
         *                                         *        
         *        Complex One-Loop Library         *        
         *      In Extended Regularizations        *        
         *                                         *        
         *    by A.Denner, S.Dittmaier, L.Hofer    *        
         *                                         *        
         *              version 1.2.4              *        
         *                                         *        
         *******************************************        
                                                            
    0x7f07a13c22a8  in '[31mPHASIC::METS_Scale_Setter::CalculateStrict(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:334[0m)
    0x7f85d3266d84  in '[31mCOMIX::Comix::ClusterConfiguration(PHASIC::Process_Base*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mComix.C:322[0m)
                                                            
         *******************************************        
         *              C O L L I E R              *        
         *                                         *        
         *        Complex One-Loop Library         *        
         *      In Extended Regularizations        *        
         *                                         *        
         *    by A.Denner, S.Dittmaier, L.Hofer    *        
         *                                         *        
         *              version 1.2.4              *        
         *                                         *        
         *******************************************        
                                                            
  [1mException_Handler::GenerateStackTrace(..): [0m[34mGenerating stack trace [0m[1m
  {[0m
                                                            
         *******************************************        
         *              C O L L I E R              *        
         *                                         *        
         *        Complex One-Loop Library         *        
         *      In Extended Regularizations        *        
         *                                         *        
         *    by A.Denner, S.Dittmaier, L.Hofer    *        
         *                                         *        
         *              version 1.2.4              *        
         *                                         *        
         *******************************************        
                                                            
                                                            
         *******************************************        
         *              C O L L I E R              *        
         *                                         *        
         *        Complex One-Loop Library         *        
         *      In Extended Regularizations        *        
         *                                         *        
         *    by A.Denner, S.Dittmaier, L.Hofer    *        
         *                                         *        
         *              version 1.2.4              *        
         *                                         *        
         *******************************************        
                                                            
  [1mException_Handler::GenerateStackTrace(..): [0m[34mGenerating stack trace [0m[1m
  {[0m
  [1mException_Handler::GenerateStackTrace(..): [0m[34mGenerating stack trace [0m[1m
  {[0m
  [1mException_Handler::GenerateStackTrace(..): [0m[34mGenerating stack trace [0m[1m
  {[0m
  [1mException_Handler::GenerateStackTrace(..): [0m[34mGenerating stack trace [0m[1m
  {[0m
  [1mException_Handler::GenerateStackTrace(..): [0m[34mGenerating stack trace [0m[1m
  {[0m
                                                            
         *******************************************        
         *              C O L L I E R              *        
         *                                         *        
         *        Complex One-Loop Library         *        
         *      In Extended Regularizations        *        
         *                                         *        
         *    by A.Denner, S.Dittmaier, L.Hofer    *        
         *                                         *        
         *              version 1.2.4              *        
         *                                         *        
         *******************************************        
                                                            
                                                            
         *******************************************        
         *              C O L L I E R              *        
         *                                         *        
         *        Complex One-Loop Library         *        
         *      In Extended Regularizations        *        
         *                                         *        
         *    by A.Denner, S.Dittmaier, L.Hofer    *        
         *                                         *        
         *              version 1.2.4              *        
         *                                         *        
         *******************************************        
                                                            
  [1mException_Handler::GenerateStackTrace(..): [0m[34mGenerating stack trace [0m[1m
  {[0m
  [1mException_Handler::GenerateStackTrace(..): [0m[34mGenerating stack trace [0m[1m
  {[0m
  [1mException_Handler::GenerateStackTrace(..): [0m[34mGenerating stack trace [0m[1m
  {[0m
  [1mException_Handler::GenerateStackTrace(..): [0m[34mGenerating stack trace [0m[1m
  {[0m
  [1mException_Handler::GenerateStackTrace(..): [0m[34mGenerating stack trace [0m[1m
  {[0m
  [1mException_Handler::GenerateStackTrace(..): [0m[34mGenerating stack trace [0m[1m
  {[0m
  [1mException_Handler::GenerateStackTrace(..): [0m[34mGenerating stack trace [0m[1m
  {[0m
  [1mException_Handler::GenerateStackTrace(..): [0m[34mGenerating stack trace [0m[1m
  {[0m
  [1mException_Handler::GenerateStackTrace(..): [0m[34mGenerating stack trace [0m[1m
  {[0m
  [1mException_Handler::GenerateStackTrace(..): [0m[34mGenerating stack trace [0m[1m
  {[0m
  [1mException_Handler::GenerateStackTrace(..): [0m[34mGenerating stack trace [0m[1m
  {[0m
  [1mException_Handler::GenerateStackTrace(..): [0m[34mGenerating stack trace [0m[1m
  {[0m
  [1mException_Handler::GenerateStackTrace(..): [0m[34mGenerating stack trace [0m[1m
  {[0m
                                                            
         *******************************************        
         *              C O L L I E R              *        
         *                                         *        
         *        Complex One-Loop Library         *        
         *      In Extended Regularizations        *        
         *                                         *        
         *    by A.Denner, S.Dittmaier, L.Hofer    *        
         *                                         *        
         *              version 1.2.4              *        
         *                                         *        
         *******************************************        
                                                            
  [1mException_Handler::GenerateStackTrace(..): [0m[34mGenerating stack trace [0m[1m
  {[0m
    0x7f51f958306b  in '[31mPHASIC::Phase_Space_Handler::Differential(PHASIC::Process_Integrator*, PHASIC::psm::code)[0m' ([36mPhase_Space_Handler.C:346[0m)
                                                            
         *******************************************        
         *              C O L L I E R              *        
         *                                         *        
         *        Complex One-Loop Library         *        
         *      In Extended Regularizations        *        
         *                                         *        
         *    by A.Denner, S.Dittmaier, L.Hofer    *        
         *                                         *        
         *              version 1.2.4              *        
         *                                         *        
         *******************************************        
                                                            
  [1mException_Handler::GenerateStackTrace(..): [0m[34mGenerating stack trace [0m[1m
  {[0m
    0x7f07a13c5eba  in '[31mPHASIC::METS_Scale_Setter::Calculate(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:368 (discriminator 5)[0m)
  [1mException_Handler::GenerateStackTrace(..): [0m[34mGenerating stack trace [0m[1m
  {[0m
    0x7f85d2b8b2a8  in '[31mPHASIC::METS_Scale_Setter::CalculateStrict(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:334[0m)
                                                            
         *******************************************        
         *              C O L L I E R              *        
         *                                         *        
         *        Complex One-Loop Library         *        
         *      In Extended Regularizations        *        
         *                                         *        
         *    by A.Denner, S.Dittmaier, L.Hofer    *        
         *                                         *        
         *              version 1.2.4              *        
         *                                         *        
         *******************************************        
                                                            
  [1mException_Handler::GenerateStackTrace(..): [0m[34mGenerating stack trace [0m[1m
  {[0m
  [1mException_Handler::GenerateStackTrace(..): [0m[34mGenerating stack trace [0m[1m
  {[0m
                                                            
         *******************************************        
         *              C O L L I E R              *        
         *                                         *        
         *        Complex One-Loop Library         *        
         *      In Extended Regularizations        *        
         *                                         *        
         *    by A.Denner, S.Dittmaier, L.Hofer    *        
         *                                         *        
         *              version 1.2.4              *        
         *                                         *        
         *******************************************        
                                                            
                                                            
         *******************************************        
         *              C O L L I E R              *        
         *                                         *        
         *        Complex One-Loop Library         *        
         *      In Extended Regularizations        *        
         *                                         *        
         *    by A.Denner, S.Dittmaier, L.Hofer    *        
         *                                         *        
         *              version 1.2.4              *        
         *                                         *        
         *******************************************        
                                                            
    0x7f59adf6385a  in '[31mCOMIX::Cluster_Algorithm::GetMeasure(unsigned long const&, unsigned long const&, unsigned long const&, ATOOLS::Flavour const&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&, int)[0m' ([36mCluster_Algorithm.C:145[0m)
    0x7fb9704c085a  in '[31mCOMIX::Cluster_Algorithm::GetMeasure(unsigned long const&, unsigned long const&, unsigned long const&, ATOOLS::Flavour const&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&, int)[0m' ([36mCluster_Algorithm.C:145[0m)
    0x7f9066cea85a  in '[31mCOMIX::Cluster_Algorithm::GetMeasure(unsigned long const&, unsigned long const&, unsigned long const&, ATOOLS::Flavour const&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&, int)[0m' ([36mCluster_Algorithm.C:145[0m)
  [1mException_Handler::GenerateStackTrace(..): [0m[34mGenerating stack trace [0m[1m
  {[0m
  [1mException_Handler::GenerateStackTrace(..): [0m[34mGenerating stack trace [0m[1m
  {[0m
  [1mException_Handler::GenerateStackTrace(..): [0m[34mGenerating stack trace [0m[1m
  {[0m
    0x7f0f6c31385a  in '[31mCOMIX::Cluster_Algorithm::GetMeasure(unsigned long const&, unsigned long const&, unsigned long const&, ATOOLS::Flavour const&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&, int)[0m' ([36mCluster_Algorithm.C:145[0m)
    0x7f305362685a  in '[31mCOMIX::Cluster_Algorithm::GetMeasure(unsigned long const&, unsigned long const&, unsigned long const&, ATOOLS::Flavour const&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&, int)[0m' ([36mCluster_Algorithm.C:145[0m)
    0x7ffa0a06985a  in '[31mCOMIX::Cluster_Algorithm::GetMeasure(unsigned long const&, unsigned long const&, unsigned long const&, ATOOLS::Flavour const&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&, int)[0m' ([36mCluster_Algorithm.C:145[0m)
    0x7f61f96bc85a  in '[31mCOMIX::Cluster_Algorithm::GetMeasure(unsigned long const&, unsigned long const&, unsigned long const&, ATOOLS::Flavour const&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&, int)[0m' ([36mCluster_Algorithm.C:145[0m)
    0x7f35c220d85a  in '[31mCOMIX::Cluster_Algorithm::GetMeasure(unsigned long const&, unsigned long const&, unsigned long const&, ATOOLS::Flavour const&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&, int)[0m' ([36mCluster_Algorithm.C:145[0m)
    0x7f1bea47c85a  in '[31mCOMIX::Cluster_Algorithm::GetMeasure(unsigned long const&, unsigned long const&, unsigned long const&, ATOOLS::Flavour const&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&, int)[0m' ([36mCluster_Algorithm.C:145[0m)
    0x7f79d6f5385a  in '[31mCOMIX::Cluster_Algorithm::GetMeasure(unsigned long const&, unsigned long const&, unsigned long const&, ATOOLS::Flavour const&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&, int)[0m' ([36mCluster_Algorithm.C:145[0m)
    0x7f3a3048185a  in '[31mCOMIX::Cluster_Algorithm::GetMeasure(unsigned long const&, unsigned long const&, unsigned long const&, ATOOLS::Flavour const&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&, int)[0m' ([36mCluster_Algorithm.C:145[0m)
    0x7f9bc2bcd85a  in '[31mCOMIX::Cluster_Algorithm::GetMeasure(unsigned long const&, unsigned long const&, unsigned long const&, ATOOLS::Flavour const&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&, int)[0m' ([36mCluster_Algorithm.C:145[0m)
    0x7f081296785a  in '[31mCOMIX::Cluster_Algorithm::GetMeasure(unsigned long const&, unsigned long const&, unsigned long const&, ATOOLS::Flavour const&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&, int)[0m' ([36mCluster_Algorithm.C:145[0m)
    0x7fd0d0fce85a  in '[31mCOMIX::Cluster_Algorithm::GetMeasure(unsigned long const&, unsigned long const&, unsigned long const&, ATOOLS::Flavour const&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&, int)[0m' ([36mCluster_Algorithm.C:145[0m)
    0x7fda1c1c985a  in '[31mCOMIX::Cluster_Algorithm::GetMeasure(unsigned long const&, unsigned long const&, unsigned long const&, ATOOLS::Flavour const&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&, int)[0m' ([36mCluster_Algorithm.C:145[0m)
    0x7f07a139c194  in '[31mPHASIC::Scale_Setter_Base::CalculateScale(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long)[0m' ([36mScale_Setter_Base.C:191[0m)
    0x7f51f9590404  in '[31mPHASIC::Phase_Space_Integrator::Calculate(double, double, int)[0m' ([36mPhase_Space_Integrator.C:165[0m)
    0x7f79ef19f85a  in '[31mCOMIX::Cluster_Algorithm::GetMeasure(unsigned long const&, unsigned long const&, unsigned long const&, ATOOLS::Flavour const&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&, int)[0m' ([36mCluster_Algorithm.C:145[0m)
    0x7fb6e249185a  in '[31mCOMIX::Cluster_Algorithm::GetMeasure(unsigned long const&, unsigned long const&, unsigned long const&, ATOOLS::Flavour const&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&, int)[0m' ([36mCluster_Algorithm.C:145[0m)
    0x7f284ba1185a  in '[31mCOMIX::Cluster_Algorithm::GetMeasure(unsigned long const&, unsigned long const&, unsigned long const&, ATOOLS::Flavour const&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&, int)[0m' ([36mCluster_Algorithm.C:145[0m)
    0x7f515efb585a  in '[31mCOMIX::Cluster_Algorithm::GetMeasure(unsigned long const&, unsigned long const&, unsigned long const&, ATOOLS::Flavour const&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&, int)[0m' ([36mCluster_Algorithm.C:145[0m)
    0x7f10f284f85a  in '[31mCOMIX::Cluster_Algorithm::GetMeasure(unsigned long const&, unsigned long const&, unsigned long const&, ATOOLS::Flavour const&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&, int)[0m' ([36mCluster_Algorithm.C:145[0m)
    0x7f051747585a  in '[31mCOMIX::Cluster_Algorithm::GetMeasure(unsigned long const&, unsigned long const&, unsigned long const&, ATOOLS::Flavour const&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&, int)[0m' ([36mCluster_Algorithm.C:145[0m)
    0x7f92fd08d85a  in '[31mCOMIX::Cluster_Algorithm::GetMeasure(unsigned long const&, unsigned long const&, unsigned long const&, ATOOLS::Flavour const&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&, int)[0m' ([36mCluster_Algorithm.C:145[0m)
    0x7f85d2b8eeba  in '[31mPHASIC::METS_Scale_Setter::Calculate(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:368 (discriminator 5)[0m)
    0x7fb6622da85a  in '[31mCOMIX::Cluster_Algorithm::GetMeasure(unsigned long const&, unsigned long const&, unsigned long const&, ATOOLS::Flavour const&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&, int)[0m' ([36mCluster_Algorithm.C:145[0m)
    0x7fdfac10d85a  in '[31mCOMIX::Cluster_Algorithm::GetMeasure(unsigned long const&, unsigned long const&, unsigned long const&, ATOOLS::Flavour const&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&, int)[0m' ([36mCluster_Algorithm.C:145[0m)
    0x7fbd7acce85a  in '[31mCOMIX::Cluster_Algorithm::GetMeasure(unsigned long const&, unsigned long const&, unsigned long const&, ATOOLS::Flavour const&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&, int)[0m' ([36mCluster_Algorithm.C:145[0m)
    0x7f59adf670fe  in '[31mCOMIX::Cluster_Algorithm::CalculateMeasures(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&)[0m' ([36mCluster_Algorithm.C:236[0m)
    0x7fda9e91d85a  in '[31mCOMIX::Cluster_Algorithm::GetMeasure(unsigned long const&, unsigned long const&, unsigned long const&, ATOOLS::Flavour const&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&, int)[0m' ([36mCluster_Algorithm.C:145[0m)
    0x7ff69b96f85a  in '[31mCOMIX::Cluster_Algorithm::GetMeasure(unsigned long const&, unsigned long const&, unsigned long const&, ATOOLS::Flavour const&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&, int)[0m' ([36mCluster_Algorithm.C:145[0m)
    0x7fb9704c40fe  in '[31mCOMIX::Cluster_Algorithm::CalculateMeasures(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&)[0m' ([36mCluster_Algorithm.C:236[0m)
    0x7f0f6c3170fe  in '[31mCOMIX::Cluster_Algorithm::CalculateMeasures(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&)[0m' ([36mCluster_Algorithm.C:236[0m)
    0x7f9066cee0fe  in '[31mCOMIX::Cluster_Algorithm::CalculateMeasures(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&)[0m' ([36mCluster_Algorithm.C:236[0m)
    0x7f1bea4800fe  in '[31mCOMIX::Cluster_Algorithm::CalculateMeasures(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&)[0m' ([36mCluster_Algorithm.C:236[0m)
    0x7f61f96c00fe  in '[31mCOMIX::Cluster_Algorithm::CalculateMeasures(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&)[0m' ([36mCluster_Algorithm.C:236[0m)
    0x7f35c22110fe  in '[31mCOMIX::Cluster_Algorithm::CalculateMeasures(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&)[0m' ([36mCluster_Algorithm.C:236[0m)
    0x7f305362a0fe  in '[31mCOMIX::Cluster_Algorithm::CalculateMeasures(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&)[0m' ([36mCluster_Algorithm.C:236[0m)
    0x7f79d6f570fe  in '[31mCOMIX::Cluster_Algorithm::CalculateMeasures(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&)[0m' ([36mCluster_Algorithm.C:236[0m)
    0x7f3a304850fe  in '[31mCOMIX::Cluster_Algorithm::CalculateMeasures(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&)[0m' ([36mCluster_Algorithm.C:236[0m)
    0x7fda1c1cd0fe  in '[31mCOMIX::Cluster_Algorithm::CalculateMeasures(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&)[0m' ([36mCluster_Algorithm.C:236[0m)
    0x7f51f95882ff  in '[31mPHASIC::Phase_Space_Handler::Integrate()[0m' ([36mPhase_Space_Handler.C:207 (discriminator 1)[0m)
    0x7fd0d0fd20fe  in '[31mCOMIX::Cluster_Algorithm::CalculateMeasures(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&)[0m' ([36mCluster_Algorithm.C:236[0m)
    0x7ffa0a06d0fe  in '[31mCOMIX::Cluster_Algorithm::CalculateMeasures(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&)[0m' ([36mCluster_Algorithm.C:236[0m)
    0x7f081296b0fe  in '[31mCOMIX::Cluster_Algorithm::CalculateMeasures(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&)[0m' ([36mCluster_Algorithm.C:236[0m)
    0x7f79ef1a30fe  in '[31mCOMIX::Cluster_Algorithm::CalculateMeasures(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&)[0m' ([36mCluster_Algorithm.C:236[0m)
    0x7f9bc2bd10fe  in '[31mCOMIX::Cluster_Algorithm::CalculateMeasures(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&)[0m' ([36mCluster_Algorithm.C:236[0m)
    0x7f07a1a8d730  in '[31mCOMIX::Single_Process::Partonic(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, int)[0m' ([36mSingle_Process.C:400[0m)
    0x7fb6e24950fe  in '[31mCOMIX::Cluster_Algorithm::CalculateMeasures(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&)[0m' ([36mCluster_Algorithm.C:236[0m)
    0x7f284ba150fe  in '[31mCOMIX::Cluster_Algorithm::CalculateMeasures(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&)[0m' ([36mCluster_Algorithm.C:236[0m)
    0x7f85d2b65194  in '[31mPHASIC::Scale_Setter_Base::CalculateScale(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long)[0m' ([36mScale_Setter_Base.C:191[0m)
    0x7f10f28530fe  in '[31mCOMIX::Cluster_Algorithm::CalculateMeasures(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&)[0m' ([36mCluster_Algorithm.C:236[0m)
    0x7f515efb90fe  in '[31mCOMIX::Cluster_Algorithm::CalculateMeasures(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&)[0m' ([36mCluster_Algorithm.C:236[0m)
    0x7f05174790fe  in '[31mCOMIX::Cluster_Algorithm::CalculateMeasures(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&)[0m' ([36mCluster_Algorithm.C:236[0m)
    0x7f92fd0910fe  in '[31mCOMIX::Cluster_Algorithm::CalculateMeasures(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&)[0m' ([36mCluster_Algorithm.C:236[0m)
    0x7fb6622de0fe  in '[31mCOMIX::Cluster_Algorithm::CalculateMeasures(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&)[0m' ([36mCluster_Algorithm.C:236[0m)
    0x7fdfac1110fe  in '[31mCOMIX::Cluster_Algorithm::CalculateMeasures(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&)[0m' ([36mCluster_Algorithm.C:236[0m)
    0x7fbd7acd20fe  in '[31mCOMIX::Cluster_Algorithm::CalculateMeasures(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&)[0m' ([36mCluster_Algorithm.C:236[0m)
    0x7f59adf68e63  in '[31mCOMIX::Cluster_Algorithm::ClusterStep(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > >&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> >&, METOOLS::Current*&, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&)[0m' ([36mCluster_Algorithm.C:370[0m)
    0x7fb9704c5e63  in '[31mCOMIX::Cluster_Algorithm::ClusterStep(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > >&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> >&, METOOLS::Current*&, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&)[0m' ([36mCluster_Algorithm.C:370[0m)
    0x7f1bea481e63  in '[31mCOMIX::Cluster_Algorithm::ClusterStep(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > >&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> >&, METOOLS::Current*&, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&)[0m' ([36mCluster_Algorithm.C:370[0m)
    0x7f9bc2bd2e63  in '[31mCOMIX::Cluster_Algorithm::ClusterStep(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > >&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> >&, METOOLS::Current*&, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&)[0m' ([36mCluster_Algorithm.C:370[0m)
    0x7f35c2212e63  in '[31mCOMIX::Cluster_Algorithm::ClusterStep(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > >&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> >&, METOOLS::Current*&, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&)[0m' ([36mCluster_Algorithm.C:370[0m)
    0x7fda9e9210fe  in '[31mCOMIX::Cluster_Algorithm::CalculateMeasures(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&)[0m' ([36mCluster_Algorithm.C:236[0m)
    0x7ff69b9730fe  in '[31mCOMIX::Cluster_Algorithm::CalculateMeasures(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&)[0m' ([36mCluster_Algorithm.C:236[0m)
    0x7f0f6c318e63  in '[31mCOMIX::Cluster_Algorithm::ClusterStep(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > >&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> >&, METOOLS::Current*&, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&)[0m' ([36mCluster_Algorithm.C:370[0m)
    0x7fda1c1cee63  in '[31mCOMIX::Cluster_Algorithm::ClusterStep(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > >&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> >&, METOOLS::Current*&, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&)[0m' ([36mCluster_Algorithm.C:370[0m)
    0x7f07a14dbbeb  in '[31mPHASIC::Single_Process::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mSingle_Process.C:439[0m)
    0x7f3a30486e63  in '[31mCOMIX::Cluster_Algorithm::ClusterStep(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > >&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> >&, METOOLS::Current*&, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&)[0m' ([36mCluster_Algorithm.C:370[0m)
    0x7fd0d0fd3e63  in '[31mCOMIX::Cluster_Algorithm::ClusterStep(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > >&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> >&, METOOLS::Current*&, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&)[0m' ([36mCluster_Algorithm.C:370[0m)
    0x7f79d6f58e63  in '[31mCOMIX::Cluster_Algorithm::ClusterStep(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > >&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> >&, METOOLS::Current*&, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&)[0m' ([36mCluster_Algorithm.C:370[0m)
    0x7f51f9500a03  in '[31mPHASIC::Process_Group::CalculateTotalXSec(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)[0m' ([36mProcess_Group.C:180[0m)
    0x7f9066cefe63  in '[31mCOMIX::Cluster_Algorithm::ClusterStep(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > >&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> >&, METOOLS::Current*&, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&)[0m' ([36mCluster_Algorithm.C:370[0m)
    0x7f305362be63  in '[31mCOMIX::Cluster_Algorithm::ClusterStep(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > >&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> >&, METOOLS::Current*&, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&)[0m' ([36mCluster_Algorithm.C:370[0m)
    0x7f61f96c1e63  in '[31mCOMIX::Cluster_Algorithm::ClusterStep(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > >&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> >&, METOOLS::Current*&, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&)[0m' ([36mCluster_Algorithm.C:370[0m)
    0x7ffa0a06ee63  in '[31mCOMIX::Cluster_Algorithm::ClusterStep(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > >&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> >&, METOOLS::Current*&, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&)[0m' ([36mCluster_Algorithm.C:370[0m)
    0x7f081296ce63  in '[31mCOMIX::Cluster_Algorithm::ClusterStep(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > >&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> >&, METOOLS::Current*&, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&)[0m' ([36mCluster_Algorithm.C:370[0m)
    0x7fb6e2496e63  in '[31mCOMIX::Cluster_Algorithm::ClusterStep(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > >&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> >&, METOOLS::Current*&, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&)[0m' ([36mCluster_Algorithm.C:370[0m)
    0x7f79ef1a4e63  in '[31mCOMIX::Cluster_Algorithm::ClusterStep(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > >&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> >&, METOOLS::Current*&, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&)[0m' ([36mCluster_Algorithm.C:370[0m)
    0x7f284ba16e63  in '[31mCOMIX::Cluster_Algorithm::ClusterStep(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > >&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> >&, METOOLS::Current*&, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&)[0m' ([36mCluster_Algorithm.C:370[0m)
    0x7f85d3256730  in '[31mCOMIX::Single_Process::Partonic(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, int)[0m' ([36mSingle_Process.C:400[0m)
    0x7f10f2854e63  in '[31mCOMIX::Cluster_Algorithm::ClusterStep(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > >&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> >&, METOOLS::Current*&, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&)[0m' ([36mCluster_Algorithm.C:370[0m)
    0x7f051747ae63  in '[31mCOMIX::Cluster_Algorithm::ClusterStep(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > >&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> >&, METOOLS::Current*&, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&)[0m' ([36mCluster_Algorithm.C:370[0m)
    0x7f515efbae63  in '[31mCOMIX::Cluster_Algorithm::ClusterStep(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > >&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> >&, METOOLS::Current*&, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&)[0m' ([36mCluster_Algorithm.C:370[0m)
    0x7fb6622dfe63  in '[31mCOMIX::Cluster_Algorithm::ClusterStep(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > >&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> >&, METOOLS::Current*&, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&)[0m' ([36mCluster_Algorithm.C:370[0m)
    0x7f92fd092e63  in '[31mCOMIX::Cluster_Algorithm::ClusterStep(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > >&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> >&, METOOLS::Current*&, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&)[0m' ([36mCluster_Algorithm.C:370[0m)
    0x7f3a3048952a  in '[31mCOMIX::Cluster_Algorithm::Cluster(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > > const&, std::vector<std::pair<unsigned long, double>, std::allocator<std::pair<unsigned long, double> > >&, int)[0m' ([36mCluster_Algorithm.C:739[0m)
    0x7f35c221552a  in '[31mCOMIX::Cluster_Algorithm::Cluster(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > > const&, std::vector<std::pair<unsigned long, double>, std::allocator<std::pair<unsigned long, double> > >&, int)[0m' ([36mCluster_Algorithm.C:739[0m)
    0x7f1bea48452a  in '[31mCOMIX::Cluster_Algorithm::Cluster(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > > const&, std::vector<std::pair<unsigned long, double>, std::allocator<std::pair<unsigned long, double> > >&, int)[0m' ([36mCluster_Algorithm.C:739[0m)
    0x7f9bc2bd552a  in '[31mCOMIX::Cluster_Algorithm::Cluster(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > > const&, std::vector<std::pair<unsigned long, double>, std::allocator<std::pair<unsigned long, double> > >&, int)[0m' ([36mCluster_Algorithm.C:739[0m)
    0x7fbd7acd3e63  in '[31mCOMIX::Cluster_Algorithm::ClusterStep(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > >&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> >&, METOOLS::Current*&, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&)[0m' ([36mCluster_Algorithm.C:370[0m)
    0x7ff69b974e63  in '[31mCOMIX::Cluster_Algorithm::ClusterStep(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > >&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> >&, METOOLS::Current*&, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&)[0m' ([36mCluster_Algorithm.C:370[0m)
    0x7fdfac112e63  in '[31mCOMIX::Cluster_Algorithm::ClusterStep(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > >&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> >&, METOOLS::Current*&, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&)[0m' ([36mCluster_Algorithm.C:370[0m)
    0x7f9066cf252a  in '[31mCOMIX::Cluster_Algorithm::Cluster(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > > const&, std::vector<std::pair<unsigned long, double>, std::allocator<std::pair<unsigned long, double> > >&, int)[0m' ([36mCluster_Algorithm.C:739[0m)
    0x7f0f6c31b52a  in '[31mCOMIX::Cluster_Algorithm::Cluster(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > > const&, std::vector<std::pair<unsigned long, double>, std::allocator<std::pair<unsigned long, double> > >&, int)[0m' ([36mCluster_Algorithm.C:739[0m)
    0x7f59adf6b52a  in '[31mCOMIX::Cluster_Algorithm::Cluster(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > > const&, std::vector<std::pair<unsigned long, double>, std::allocator<std::pair<unsigned long, double> > >&, int)[0m' ([36mCluster_Algorithm.C:739[0m)
    0x7f081296f52a  in '[31mCOMIX::Cluster_Algorithm::Cluster(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > > const&, std::vector<std::pair<unsigned long, double>, std::allocator<std::pair<unsigned long, double> > >&, int)[0m' ([36mCluster_Algorithm.C:739[0m)
    0x7f07a14cb63d  in '[31mPHASIC::Process_Group::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mProcess_Group.C:60 (discriminator 2)[0m)
    0x7fda1c1d152a  in '[31mCOMIX::Cluster_Algorithm::Cluster(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > > const&, std::vector<std::pair<unsigned long, double>, std::allocator<std::pair<unsigned long, double> > >&, int)[0m' ([36mCluster_Algorithm.C:739[0m)
    0x7f61f96c452a  in '[31mCOMIX::Cluster_Algorithm::Cluster(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > > const&, std::vector<std::pair<unsigned long, double>, std::allocator<std::pair<unsigned long, double> > >&, int)[0m' ([36mCluster_Algorithm.C:739[0m)
    0x7fd0d0fd652a  in '[31mCOMIX::Cluster_Algorithm::Cluster(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > > const&, std::vector<std::pair<unsigned long, double>, std::allocator<std::pair<unsigned long, double> > >&, int)[0m' ([36mCluster_Algorithm.C:739[0m)
    0x7f79ef1a752a  in '[31mCOMIX::Cluster_Algorithm::Cluster(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > > const&, std::vector<std::pair<unsigned long, double>, std::allocator<std::pair<unsigned long, double> > >&, int)[0m' ([36mCluster_Algorithm.C:739[0m)
    0x7fb9704c852a  in '[31mCOMIX::Cluster_Algorithm::Cluster(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > > const&, std::vector<std::pair<unsigned long, double>, std::allocator<std::pair<unsigned long, double> > >&, int)[0m' ([36mCluster_Algorithm.C:739[0m)
    0x7fda9e922e63  in '[31mCOMIX::Cluster_Algorithm::ClusterStep(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > >&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> >&, METOOLS::Current*&, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&)[0m' ([36mCluster_Algorithm.C:370[0m)
    0x7f305362e52a  in '[31mCOMIX::Cluster_Algorithm::Cluster(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > > const&, std::vector<std::pair<unsigned long, double>, std::allocator<std::pair<unsigned long, double> > >&, int)[0m' ([36mCluster_Algorithm.C:739[0m)
    0x7ffa0a07152a  in '[31mCOMIX::Cluster_Algorithm::Cluster(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > > const&, std::vector<std::pair<unsigned long, double>, std::allocator<std::pair<unsigned long, double> > >&, int)[0m' ([36mCluster_Algorithm.C:739[0m)
    0x7f79d6f5b52a  in '[31mCOMIX::Cluster_Algorithm::Cluster(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > > const&, std::vector<std::pair<unsigned long, double>, std::allocator<std::pair<unsigned long, double> > >&, int)[0m' ([36mCluster_Algorithm.C:739[0m)
    0x7fb6e249952a  in '[31mCOMIX::Cluster_Algorithm::Cluster(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > > const&, std::vector<std::pair<unsigned long, double>, std::allocator<std::pair<unsigned long, double> > >&, int)[0m' ([36mCluster_Algorithm.C:739[0m)
    0x7f284ba1952a  in '[31mCOMIX::Cluster_Algorithm::Cluster(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > > const&, std::vector<std::pair<unsigned long, double>, std::allocator<std::pair<unsigned long, double> > >&, int)[0m' ([36mCluster_Algorithm.C:739[0m)
    0x7f51fa074770  in '[31mSHERPA::Matrix_Element_Handler::CalculateTotalXSecs()[0m' ([36mMatrix_Element_Handler.C:146[0m)
    0x7f85d2ca4beb  in '[31mPHASIC::Single_Process::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mSingle_Process.C:439[0m)
    0x7f051747d52a  in '[31mCOMIX::Cluster_Algorithm::Cluster(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > > const&, std::vector<std::pair<unsigned long, double>, std::allocator<std::pair<unsigned long, double> > >&, int)[0m' ([36mCluster_Algorithm.C:739[0m)
    0x7f10f285752a  in '[31mCOMIX::Cluster_Algorithm::Cluster(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > > const&, std::vector<std::pair<unsigned long, double>, std::allocator<std::pair<unsigned long, double> > >&, int)[0m' ([36mCluster_Algorithm.C:739[0m)
    0x7fb6622e252a  in '[31mCOMIX::Cluster_Algorithm::Cluster(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > > const&, std::vector<std::pair<unsigned long, double>, std::allocator<std::pair<unsigned long, double> > >&, int)[0m' ([36mCluster_Algorithm.C:739[0m)
    0x7f92fd09552a  in '[31mCOMIX::Cluster_Algorithm::Cluster(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > > const&, std::vector<std::pair<unsigned long, double>, std::allocator<std::pair<unsigned long, double> > >&, int)[0m' ([36mCluster_Algorithm.C:739[0m)
    0x7ff69b97752a  in '[31mCOMIX::Cluster_Algorithm::Cluster(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > > const&, std::vector<std::pair<unsigned long, double>, std::allocator<std::pair<unsigned long, double> > >&, int)[0m' ([36mCluster_Algorithm.C:739[0m)
    0x7f3a3048ae97  in '[31mCOMIX::Cluster_Algorithm::Cluster(COMIX::Single_Process*, COMIX::Single_Dipole_Term*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mCluster_Algorithm.C:642 (discriminator 2)[0m)
    0x7f9bc2bd6e97  in '[31mCOMIX::Cluster_Algorithm::Cluster(COMIX::Single_Process*, COMIX::Single_Dipole_Term*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mCluster_Algorithm.C:642 (discriminator 2)[0m)
    0x7f1bea485e97  in '[31mCOMIX::Cluster_Algorithm::Cluster(COMIX::Single_Process*, COMIX::Single_Dipole_Term*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mCluster_Algorithm.C:642 (discriminator 2)[0m)
    0x7fbd7acd652a  in '[31mCOMIX::Cluster_Algorithm::Cluster(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > > const&, std::vector<std::pair<unsigned long, double>, std::allocator<std::pair<unsigned long, double> > >&, int)[0m' ([36mCluster_Algorithm.C:739[0m)
    0x7f35c2216e97  in '[31mCOMIX::Cluster_Algorithm::Cluster(COMIX::Single_Process*, COMIX::Single_Dipole_Term*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mCluster_Algorithm.C:642 (discriminator 2)[0m)
    0x7fdfac11552a  in '[31mCOMIX::Cluster_Algorithm::Cluster(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > > const&, std::vector<std::pair<unsigned long, double>, std::allocator<std::pair<unsigned long, double> > >&, int)[0m' ([36mCluster_Algorithm.C:739[0m)
    0x7f515efbd52a  in '[31mCOMIX::Cluster_Algorithm::Cluster(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > > const&, std::vector<std::pair<unsigned long, double>, std::allocator<std::pair<unsigned long, double> > >&, int)[0m' ([36mCluster_Algorithm.C:739[0m)
    0x7f9066cf3e97  in '[31mCOMIX::Cluster_Algorithm::Cluster(COMIX::Single_Process*, COMIX::Single_Dipole_Term*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mCluster_Algorithm.C:642 (discriminator 2)[0m)
    0x7fb9704c9e97  in '[31mCOMIX::Cluster_Algorithm::Cluster(COMIX::Single_Process*, COMIX::Single_Dipole_Term*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mCluster_Algorithm.C:642 (discriminator 2)[0m)
    0x7f07a154bed9  in '[31mPHASIC::Phase_Space_Handler::CalculateME()[0m' ([36mPhase_Space_Handler.C:251[0m)
    0x7f61f96c5e97  in '[31mCOMIX::Cluster_Algorithm::Cluster(COMIX::Single_Process*, COMIX::Single_Dipole_Term*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mCluster_Algorithm.C:642 (discriminator 2)[0m)
    0x7f59adf6ce97  in '[31mCOMIX::Cluster_Algorithm::Cluster(COMIX::Single_Process*, COMIX::Single_Dipole_Term*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mCluster_Algorithm.C:642 (discriminator 2)[0m)
    0x7fda9e92552a  in '[31mCOMIX::Cluster_Algorithm::Cluster(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > > const&, std::vector<std::pair<unsigned long, double>, std::allocator<std::pair<unsigned long, double> > >&, int)[0m' ([36mCluster_Algorithm.C:739[0m)
    0x7f79ef1a8e97  in '[31mCOMIX::Cluster_Algorithm::Cluster(COMIX::Single_Process*, COMIX::Single_Dipole_Term*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mCluster_Algorithm.C:642 (discriminator 2)[0m)
    0x7fd0d0fd7e97  in '[31mCOMIX::Cluster_Algorithm::Cluster(COMIX::Single_Process*, COMIX::Single_Dipole_Term*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mCluster_Algorithm.C:642 (discriminator 2)[0m)
    0x7fb6e249ae97  in '[31mCOMIX::Cluster_Algorithm::Cluster(COMIX::Single_Process*, COMIX::Single_Dipole_Term*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mCluster_Algorithm.C:642 (discriminator 2)[0m)
    0x7f284ba1ae97  in '[31mCOMIX::Cluster_Algorithm::Cluster(COMIX::Single_Process*, COMIX::Single_Dipole_Term*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mCluster_Algorithm.C:642 (discriminator 2)[0m)
    0x7f0812970e97  in '[31mCOMIX::Cluster_Algorithm::Cluster(COMIX::Single_Process*, COMIX::Single_Dipole_Term*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mCluster_Algorithm.C:642 (discriminator 2)[0m)
    0x7ffa0a072e97  in '[31mCOMIX::Cluster_Algorithm::Cluster(COMIX::Single_Process*, COMIX::Single_Dipole_Term*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mCluster_Algorithm.C:642 (discriminator 2)[0m)
    0x7fda1c1d2e97  in '[31mCOMIX::Cluster_Algorithm::Cluster(COMIX::Single_Process*, COMIX::Single_Dipole_Term*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mCluster_Algorithm.C:642 (discriminator 2)[0m)
    0x7f85d2c9463d  in '[31mPHASIC::Process_Group::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mProcess_Group.C:60 (discriminator 2)[0m)
    0x7f305362fe97  in '[31mCOMIX::Cluster_Algorithm::Cluster(COMIX::Single_Process*, COMIX::Single_Dipole_Term*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mCluster_Algorithm.C:642 (discriminator 2)[0m)
    0x7f0f6c31ce97  in '[31mCOMIX::Cluster_Algorithm::Cluster(COMIX::Single_Process*, COMIX::Single_Dipole_Term*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mCluster_Algorithm.C:642 (discriminator 2)[0m)
    0x7f79d6f5ce97  in '[31mCOMIX::Cluster_Algorithm::Cluster(COMIX::Single_Process*, COMIX::Single_Dipole_Term*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mCluster_Algorithm.C:642 (discriminator 2)[0m)
    0x7fdfac116e97  in '[31mCOMIX::Cluster_Algorithm::Cluster(COMIX::Single_Process*, COMIX::Single_Dipole_Term*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mCluster_Algorithm.C:642 (discriminator 2)[0m)
    0x7f051747ee97  in '[31mCOMIX::Cluster_Algorithm::Cluster(COMIX::Single_Process*, COMIX::Single_Dipole_Term*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mCluster_Algorithm.C:642 (discriminator 2)[0m)
    0x7f3a304bfd84  in '[31mCOMIX::Comix::ClusterConfiguration(PHASIC::Process_Base*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mComix.C:322[0m)
    0x7fbd7acd7e97  in '[31mCOMIX::Cluster_Algorithm::Cluster(COMIX::Single_Process*, COMIX::Single_Dipole_Term*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mCluster_Algorithm.C:642 (discriminator 2)[0m)
    0x7f10f2858e97  in '[31mCOMIX::Cluster_Algorithm::Cluster(COMIX::Single_Process*, COMIX::Single_Dipole_Term*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mCluster_Algorithm.C:642 (discriminator 2)[0m)
    0x7f92fd096e97  in '[31mCOMIX::Cluster_Algorithm::Cluster(COMIX::Single_Process*, COMIX::Single_Dipole_Term*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mCluster_Algorithm.C:642 (discriminator 2)[0m)
    0x7f35c224bd84  in '[31mCOMIX::Comix::ClusterConfiguration(PHASIC::Process_Base*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mComix.C:322[0m)
    0x7fb6622e3e97  in '[31mCOMIX::Cluster_Algorithm::Cluster(COMIX::Single_Process*, COMIX::Single_Dipole_Term*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mCluster_Algorithm.C:642 (discriminator 2)[0m)
    0x7ff69b978e97  in '[31mCOMIX::Cluster_Algorithm::Cluster(COMIX::Single_Process*, COMIX::Single_Dipole_Term*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mCluster_Algorithm.C:642 (discriminator 2)[0m)
    0x7f1bea4bad84  in '[31mCOMIX::Comix::ClusterConfiguration(PHASIC::Process_Base*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mComix.C:322[0m)
    0x7f9bc2c0bd84  in '[31mCOMIX::Comix::ClusterConfiguration(PHASIC::Process_Base*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mComix.C:322[0m)
    0x7f51fa0d3c27  in '[31mSHERPA::Initialization_Handler::CalculateTheHardProcesses()[0m' ([36mInitialization_Handler.C:885[0m)
    0x7f515efbee97  in '[31mCOMIX::Cluster_Algorithm::Cluster(COMIX::Single_Process*, COMIX::Single_Dipole_Term*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mCluster_Algorithm.C:642 (discriminator 2)[0m)
    0x7f59adfa1d84  in '[31mCOMIX::Comix::ClusterConfiguration(PHASIC::Process_Base*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mComix.C:322[0m)
    0x7fda9e926e97  in '[31mCOMIX::Cluster_Algorithm::Cluster(COMIX::Single_Process*, COMIX::Single_Dipole_Term*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mCluster_Algorithm.C:642 (discriminator 2)[0m)
    0x7f07a154e06b  in '[31mPHASIC::Phase_Space_Handler::Differential(PHASIC::Process_Integrator*, PHASIC::psm::code)[0m' ([36mPhase_Space_Handler.C:346[0m)
    0x7f9066d28d84  in '[31mCOMIX::Comix::ClusterConfiguration(PHASIC::Process_Base*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mComix.C:322[0m)
    0x7f85d2d14ed9  in '[31mPHASIC::Phase_Space_Handler::CalculateME()[0m' ([36mPhase_Space_Handler.C:251[0m)
    0x7f79ef1ddd84  in '[31mCOMIX::Comix::ClusterConfiguration(PHASIC::Process_Base*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mComix.C:322[0m)
    0x7f61f96fad84  in '[31mCOMIX::Comix::ClusterConfiguration(PHASIC::Process_Base*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mComix.C:322[0m)
    0x7f08129a5d84  in '[31mCOMIX::Comix::ClusterConfiguration(PHASIC::Process_Base*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mComix.C:322[0m)
    0x7fb9704fed84  in '[31mCOMIX::Comix::ClusterConfiguration(PHASIC::Process_Base*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mComix.C:322[0m)
    0x7fb6e24cfd84  in '[31mCOMIX::Comix::ClusterConfiguration(PHASIC::Process_Base*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mComix.C:322[0m)
    0x7f3053664d84  in '[31mCOMIX::Comix::ClusterConfiguration(PHASIC::Process_Base*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mComix.C:322[0m)
    0x7f0f6c351d84  in '[31mCOMIX::Comix::ClusterConfiguration(PHASIC::Process_Base*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mComix.C:322[0m)
    0x7f79d6f91d84  in '[31mCOMIX::Comix::ClusterConfiguration(PHASIC::Process_Base*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mComix.C:322[0m)
    0x7fd0d100cd84  in '[31mCOMIX::Comix::ClusterConfiguration(PHASIC::Process_Base*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mComix.C:322[0m)
    0x7fda1c207d84  in '[31mCOMIX::Comix::ClusterConfiguration(PHASIC::Process_Base*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mComix.C:322[0m)
    0x7f284ba4fd84  in '[31mCOMIX::Comix::ClusterConfiguration(PHASIC::Process_Base*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mComix.C:322[0m)
    0x7ffa0a0a7d84  in '[31mCOMIX::Comix::ClusterConfiguration(PHASIC::Process_Base*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mComix.C:322[0m)
    0x7f3a2fde42a8  in '[31mPHASIC::METS_Scale_Setter::CalculateStrict(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:334[0m)
    0x7f9bc25302a8  in '[31mPHASIC::METS_Scale_Setter::CalculateStrict(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:334[0m)
    0x7f92fd0cbd84  in '[31mCOMIX::Comix::ClusterConfiguration(PHASIC::Process_Base*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mComix.C:322[0m)
    0x7fb662318d84  in '[31mCOMIX::Comix::ClusterConfiguration(PHASIC::Process_Base*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mComix.C:322[0m)
    0x7f35c1b702a8  in '[31mPHASIC::METS_Scale_Setter::CalculateStrict(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:334[0m)
    0x7ff69b9add84  in '[31mCOMIX::Comix::ClusterConfiguration(PHASIC::Process_Base*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mComix.C:322[0m)
    0x7fdfac14bd84  in '[31mCOMIX::Comix::ClusterConfiguration(PHASIC::Process_Base*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mComix.C:322[0m)
    0x7f10f288dd84  in '[31mCOMIX::Comix::ClusterConfiguration(PHASIC::Process_Base*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mComix.C:322[0m)
    0x7f05174b3d84  in '[31mCOMIX::Comix::ClusterConfiguration(PHASIC::Process_Base*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mComix.C:322[0m)
    0x7f51fa0fee2f  in '[31mSHERPA::Sherpa::InitializeTheRun(int, char**)[0m' ([36mSherpa.C:126[0m)
    0x7f1be9ddf2a8  in '[31mPHASIC::METS_Scale_Setter::CalculateStrict(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:334[0m)
    0x7f07a155b404  in '[31mPHASIC::Phase_Space_Integrator::Calculate(double, double, int)[0m' ([36mPhase_Space_Integrator.C:165[0m)
    0x7f08122ca2a8  in '[31mPHASIC::METS_Scale_Setter::CalculateStrict(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:334[0m)
    0x7fbd7ad0cd84  in '[31mCOMIX::Comix::ClusterConfiguration(PHASIC::Process_Base*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mComix.C:322[0m)
    0x7f59ad8c62a8  in '[31mPHASIC::METS_Scale_Setter::CalculateStrict(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:334[0m)
    0x7f61f901f2a8  in '[31mPHASIC::METS_Scale_Setter::CalculateStrict(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:334[0m)
    0x7f79eeb022a8  in '[31mPHASIC::METS_Scale_Setter::CalculateStrict(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:334[0m)
    0x7fd0d09312a8  in '[31mPHASIC::METS_Scale_Setter::CalculateStrict(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:334[0m)
    0x7fb96fe232a8  in '[31mPHASIC::METS_Scale_Setter::CalculateStrict(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:334[0m)
    0x7f3052f892a8  in '[31mPHASIC::METS_Scale_Setter::CalculateStrict(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:334[0m)
    0x7f79d68b62a8  in '[31mPHASIC::METS_Scale_Setter::CalculateStrict(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:334[0m)
    0x7f0f6bc762a8  in '[31mPHASIC::METS_Scale_Setter::CalculateStrict(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:334[0m)
    0x7fda1bb2c2a8  in '[31mPHASIC::METS_Scale_Setter::CalculateStrict(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:334[0m)
    0x7fda9e95bd84  in '[31mCOMIX::Comix::ClusterConfiguration(PHASIC::Process_Base*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mComix.C:322[0m)
    0x7f85d2d1706b  in '[31mPHASIC::Phase_Space_Handler::Differential(PHASIC::Process_Integrator*, PHASIC::psm::code)[0m' ([36mPhase_Space_Handler.C:346[0m)
    0x3fc3a1ed20    in '[31m__libc_start_main[0m' ([36m??:?[0m)
  [1m}[0m[0m   Cannot continue.[0m
  [1mException_Handler::GenerateStackTrace(..): [0m[34mGenerating stack trace [0m[1m
  {[0m
    0x7fb6e1df42a8  in '[31mPHASIC::METS_Scale_Setter::CalculateStrict(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:334[0m)
    0x7f906664d2a8  in '[31mPHASIC::METS_Scale_Setter::CalculateStrict(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:334[0m)
    0x7f515eff3d84  in '[31mCOMIX::Comix::ClusterConfiguration(PHASIC::Process_Base*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mComix.C:322[0m)
    0x7f284b3742a8  in '[31mPHASIC::METS_Scale_Setter::CalculateStrict(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:334[0m)
    0x7ffa099cc2a8  in '[31mPHASIC::METS_Scale_Setter::CalculateStrict(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:334[0m)
    0x7f35c1b73eba  in '[31mPHASIC::METS_Scale_Setter::Calculate(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:368 (discriminator 5)[0m)
    0x7f0516dd82a8  in '[31mPHASIC::METS_Scale_Setter::CalculateStrict(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:334[0m)
    0x7f92fc9f02a8  in '[31mPHASIC::METS_Scale_Setter::CalculateStrict(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:334[0m)
    0x7f07a15532ff  in '[31mPHASIC::Phase_Space_Handler::Integrate()[0m' ([36mPhase_Space_Handler.C:207 (discriminator 1)[0m)
    0x7f1be9de2eba  in '[31mPHASIC::METS_Scale_Setter::Calculate(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:368 (discriminator 5)[0m)
    0x7f3a2fde7eba  in '[31mPHASIC::METS_Scale_Setter::Calculate(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:368 (discriminator 5)[0m)
    0x7fb661c3d2a8  in '[31mPHASIC::METS_Scale_Setter::CalculateStrict(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:334[0m)
    0x7f85d2d24404  in '[31mPHASIC::Phase_Space_Integrator::Calculate(double, double, int)[0m' ([36mPhase_Space_Integrator.C:165[0m)
    0x7fbd7a6312a8  in '[31mPHASIC::METS_Scale_Setter::CalculateStrict(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:334[0m)
    0x7f59ad8c9eba  in '[31mPHASIC::METS_Scale_Setter::Calculate(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:368 (discriminator 5)[0m)
    0x7ff69b2d22a8  in '[31mPHASIC::METS_Scale_Setter::CalculateStrict(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:334[0m)
    0x7f9bc2533eba  in '[31mPHASIC::METS_Scale_Setter::Calculate(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:368 (discriminator 5)[0m)
    0x7f08122cdeba  in '[31mPHASIC::METS_Scale_Setter::Calculate(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:368 (discriminator 5)[0m)
    0x7f61f9022eba  in '[31mPHASIC::METS_Scale_Setter::Calculate(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:368 (discriminator 5)[0m)
    0x7fda1bb2feba  in '[31mPHASIC::METS_Scale_Setter::Calculate(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:368 (discriminator 5)[0m)
    0x7f3052f8ceba  in '[31mPHASIC::METS_Scale_Setter::Calculate(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:368 (discriminator 5)[0m)
    0x7f79eeb05eba  in '[31mPHASIC::METS_Scale_Setter::Calculate(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:368 (discriminator 5)[0m)
    0x7f35c1b4a194  in '[31mPHASIC::Scale_Setter_Base::CalculateScale(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long)[0m' ([36mScale_Setter_Base.C:191[0m)
    0x7f79d68b9eba  in '[31mPHASIC::METS_Scale_Setter::Calculate(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:368 (discriminator 5)[0m)
    0x7f0f6bc79eba  in '[31mPHASIC::METS_Scale_Setter::Calculate(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:368 (discriminator 5)[0m)
    0x7fda9e2802a8  in '[31mPHASIC::METS_Scale_Setter::CalculateStrict(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:334[0m)
    0x7fb6e1df7eba  in '[31mPHASIC::METS_Scale_Setter::Calculate(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:368 (discriminator 5)[0m)
    0x7fb96fe26eba  in '[31mPHASIC::METS_Scale_Setter::Calculate(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:368 (discriminator 5)[0m)
    0x7fd0d0934eba  in '[31mPHASIC::METS_Scale_Setter::Calculate(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:368 (discriminator 5)[0m)
    0x7ffa099cfeba  in '[31mPHASIC::METS_Scale_Setter::Calculate(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:368 (discriminator 5)[0m)
    0x7f284b377eba  in '[31mPHASIC::METS_Scale_Setter::Calculate(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:368 (discriminator 5)[0m)
    0x7f3a2fdbe194  in '[31mPHASIC::Scale_Setter_Base::CalculateScale(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long)[0m' ([36mScale_Setter_Base.C:191[0m)
    0x7f9066650eba  in '[31mPHASIC::METS_Scale_Setter::Calculate(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:368 (discriminator 5)[0m)
    0x7f51f9a9485a  in '[31mCOMIX::Cluster_Algorithm::GetMeasure(unsigned long const&, unsigned long const&, unsigned long const&, ATOOLS::Flavour const&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&, int)[0m' ([36mCluster_Algorithm.C:145[0m)
    0x7f515e9182a8  in '[31mPHASIC::METS_Scale_Setter::CalculateStrict(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:334[0m)
    0x7f61f8ff9194  in '[31mPHASIC::Scale_Setter_Base::CalculateScale(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long)[0m' ([36mScale_Setter_Base.C:191[0m)
    0x7f08122a4194  in '[31mPHASIC::Scale_Setter_Base::CalculateScale(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long)[0m' ([36mScale_Setter_Base.C:191[0m)
    0x7f1be9db9194  in '[31mPHASIC::Scale_Setter_Base::CalculateScale(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long)[0m' ([36mScale_Setter_Base.C:191[0m)
    0x7f59ad8a0194  in '[31mPHASIC::Scale_Setter_Base::CalculateScale(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long)[0m' ([36mScale_Setter_Base.C:191[0m)
    0x7f10f21b22a8  in '[31mPHASIC::METS_Scale_Setter::CalculateStrict(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:334[0m)
    0x7f9bc250a194  in '[31mPHASIC::Scale_Setter_Base::CalculateScale(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long)[0m' ([36mScale_Setter_Base.C:191[0m)
    0x7f0516ddbeba  in '[31mPHASIC::METS_Scale_Setter::Calculate(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:368 (discriminator 5)[0m)
    0x7f3052f63194  in '[31mPHASIC::Scale_Setter_Base::CalculateScale(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long)[0m' ([36mScale_Setter_Base.C:191[0m)
    0x7f79eeadc194  in '[31mPHASIC::Scale_Setter_Base::CalculateScale(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long)[0m' ([36mScale_Setter_Base.C:191[0m)
    0x7f92fc9f3eba  in '[31mPHASIC::METS_Scale_Setter::Calculate(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:368 (discriminator 5)[0m)
    0x7fda1bb06194  in '[31mPHASIC::Scale_Setter_Base::CalculateScale(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long)[0m' ([36mScale_Setter_Base.C:191[0m)
    0x7fbd7a634eba  in '[31mPHASIC::METS_Scale_Setter::Calculate(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:368 (discriminator 5)[0m)
    0x7f07a14cba03  in '[31mPHASIC::Process_Group::CalculateTotalXSec(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)[0m' ([36mProcess_Group.C:180[0m)
    0x7f85d2d1c2ff  in '[31mPHASIC::Phase_Space_Handler::Integrate()[0m' ([36mPhase_Space_Handler.C:207 (discriminator 1)[0m)
    0x7f0f6bc50194  in '[31mPHASIC::Scale_Setter_Base::CalculateScale(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long)[0m' ([36mScale_Setter_Base.C:191[0m)
    0x7ff69b2d5eba  in '[31mPHASIC::METS_Scale_Setter::Calculate(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:368 (discriminator 5)[0m)
    0x7fb661c40eba  in '[31mPHASIC::METS_Scale_Setter::Calculate(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:368 (discriminator 5)[0m)
    0x7fb96fdfd194  in '[31mPHASIC::Scale_Setter_Base::CalculateScale(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long)[0m' ([36mScale_Setter_Base.C:191[0m)
    0x7f79d6890194  in '[31mPHASIC::Scale_Setter_Base::CalculateScale(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long)[0m' ([36mScale_Setter_Base.C:191[0m)
    0x7f284b34e194  in '[31mPHASIC::Scale_Setter_Base::CalculateScale(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long)[0m' ([36mScale_Setter_Base.C:191[0m)
    0x7ffa099a6194  in '[31mPHASIC::Scale_Setter_Base::CalculateScale(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long)[0m' ([36mScale_Setter_Base.C:191[0m)
    0x7fd0d090b194  in '[31mPHASIC::Scale_Setter_Base::CalculateScale(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long)[0m' ([36mScale_Setter_Base.C:191[0m)
    0x7fdfaba702a8  in '[31mPHASIC::METS_Scale_Setter::CalculateStrict(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:334[0m)
    0x7fb6e1dce194  in '[31mPHASIC::Scale_Setter_Base::CalculateScale(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long)[0m' ([36mScale_Setter_Base.C:191[0m)
    0x7fda9e283eba  in '[31mPHASIC::METS_Scale_Setter::Calculate(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:368 (discriminator 5)[0m)
    0x7f35c223b730  in '[31mCOMIX::Single_Process::Partonic(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, int)[0m' ([36mSingle_Process.C:400[0m)
    0x7fbd7a60b194  in '[31mPHASIC::Scale_Setter_Base::CalculateScale(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long)[0m' ([36mScale_Setter_Base.C:191[0m)
    0x7f9066627194  in '[31mPHASIC::Scale_Setter_Base::CalculateScale(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long)[0m' ([36mScale_Setter_Base.C:191[0m)
    0x7f92fc9ca194  in '[31mPHASIC::Scale_Setter_Base::CalculateScale(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long)[0m' ([36mScale_Setter_Base.C:191[0m)
    0x7f0516db2194  in '[31mPHASIC::Scale_Setter_Base::CalculateScale(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long)[0m' ([36mScale_Setter_Base.C:191[0m)
    0x7f10f21b5eba  in '[31mPHASIC::METS_Scale_Setter::Calculate(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:368 (discriminator 5)[0m)
    0x7ff69b2ac194  in '[31mPHASIC::Scale_Setter_Base::CalculateScale(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long)[0m' ([36mScale_Setter_Base.C:191[0m)
    0x7f51f9a980fe  in '[31mCOMIX::Cluster_Algorithm::CalculateMeasures(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&)[0m' ([36mCluster_Algorithm.C:236[0m)
    0x7f515e91beba  in '[31mPHASIC::METS_Scale_Setter::Calculate(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:368 (discriminator 5)[0m)
    0x7fb661c17194  in '[31mPHASIC::Scale_Setter_Base::CalculateScale(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long)[0m' ([36mScale_Setter_Base.C:191[0m)
    0x7f0812995730  in '[31mCOMIX::Single_Process::Partonic(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, int)[0m' ([36mSingle_Process.C:400[0m)
    0x7f3053654730  in '[31mCOMIX::Single_Process::Partonic(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, int)[0m' ([36mSingle_Process.C:400[0m)
    0x7fda1c1f7730  in '[31mCOMIX::Single_Process::Partonic(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, int)[0m' ([36mSingle_Process.C:400[0m)
    0x7f59adf91730  in '[31mCOMIX::Single_Process::Partonic(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, int)[0m' ([36mSingle_Process.C:400[0m)
    0x7f1bea4aa730  in '[31mCOMIX::Single_Process::Partonic(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, int)[0m' ([36mSingle_Process.C:400[0m)
    0x7f3a304af730  in '[31mCOMIX::Single_Process::Partonic(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, int)[0m' ([36mSingle_Process.C:400[0m)
    0x7f79ef1cd730  in '[31mCOMIX::Single_Process::Partonic(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, int)[0m' ([36mSingle_Process.C:400[0m)
    0x7f61f96ea730  in '[31mCOMIX::Single_Process::Partonic(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, int)[0m' ([36mSingle_Process.C:400[0m)
    0x7fdfaba73eba  in '[31mPHASIC::METS_Scale_Setter::Calculate(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:368 (discriminator 5)[0m)
    0x7fda9e25a194  in '[31mPHASIC::Scale_Setter_Base::CalculateScale(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long)[0m' ([36mScale_Setter_Base.C:191[0m)
    0x7f9bc2bfb730  in '[31mCOMIX::Single_Process::Partonic(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, int)[0m' ([36mSingle_Process.C:400[0m)
    0x7f35c1c89beb  in '[31mPHASIC::Single_Process::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mSingle_Process.C:439[0m)
    0x7f85d2c94a03  in '[31mPHASIC::Process_Group::CalculateTotalXSec(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)[0m' ([36mProcess_Group.C:180[0m)
    0x7f284ba3f730  in '[31mCOMIX::Single_Process::Partonic(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, int)[0m' ([36mSingle_Process.C:400[0m)
    0x7fd0d0ffc730  in '[31mCOMIX::Single_Process::Partonic(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, int)[0m' ([36mSingle_Process.C:400[0m)
    0x7ffa0a097730  in '[31mCOMIX::Single_Process::Partonic(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, int)[0m' ([36mSingle_Process.C:400[0m)
    0x7f07a203f770  in '[31mSHERPA::Matrix_Element_Handler::CalculateTotalXSecs()[0m' ([36mMatrix_Element_Handler.C:146[0m)
    0x7f0f6c341730  in '[31mCOMIX::Single_Process::Partonic(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, int)[0m' ([36mSingle_Process.C:400[0m)
    0x7f10f218c194  in '[31mPHASIC::Scale_Setter_Base::CalculateScale(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long)[0m' ([36mScale_Setter_Base.C:191[0m)
    0x7f515e8f2194  in '[31mPHASIC::Scale_Setter_Base::CalculateScale(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long)[0m' ([36mScale_Setter_Base.C:191[0m)
    0x7fb9704ee730  in '[31mCOMIX::Single_Process::Partonic(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, int)[0m' ([36mSingle_Process.C:400[0m)
    0x7f51f9a99e63  in '[31mCOMIX::Cluster_Algorithm::ClusterStep(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > >&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> >&, METOOLS::Current*&, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&)[0m' ([36mCluster_Algorithm.C:370[0m)
    0x7fbd7acfc730  in '[31mCOMIX::Single_Process::Partonic(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, int)[0m' ([36mSingle_Process.C:400[0m)
    0x7f9066d18730  in '[31mCOMIX::Single_Process::Partonic(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, int)[0m' ([36mSingle_Process.C:400[0m)
    0x7f1be9ef8beb  in '[31mPHASIC::Single_Process::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mSingle_Process.C:439[0m)
    0x7f30530a2beb  in '[31mPHASIC::Single_Process::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mSingle_Process.C:439[0m)
    0x7f05174a3730  in '[31mCOMIX::Single_Process::Partonic(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, int)[0m' ([36mSingle_Process.C:400[0m)
    0x7fb6e24bf730  in '[31mCOMIX::Single_Process::Partonic(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, int)[0m' ([36mSingle_Process.C:400[0m)
    0x7f08123e3beb  in '[31mPHASIC::Single_Process::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mSingle_Process.C:439[0m)
    0x7fda1bc45beb  in '[31mPHASIC::Single_Process::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mSingle_Process.C:439[0m)
    0x7f92fd0bb730  in '[31mCOMIX::Single_Process::Partonic(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, int)[0m' ([36mSingle_Process.C:400[0m)
    0x7f59ad9dfbeb  in '[31mPHASIC::Single_Process::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mSingle_Process.C:439[0m)
    0x7f79d6f81730  in '[31mCOMIX::Single_Process::Partonic(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, int)[0m' ([36mSingle_Process.C:400[0m)
    0x7fdfaba4a194  in '[31mPHASIC::Scale_Setter_Base::CalculateScale(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long)[0m' ([36mScale_Setter_Base.C:191[0m)
    0x7fb662308730  in '[31mCOMIX::Single_Process::Partonic(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, int)[0m' ([36mSingle_Process.C:400[0m)
    0x7f3a2fefdbeb  in '[31mPHASIC::Single_Process::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mSingle_Process.C:439[0m)
    0x7f61f9138beb  in '[31mPHASIC::Single_Process::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mSingle_Process.C:439[0m)
    0x7ff69b99d730  in '[31mCOMIX::Single_Process::Partonic(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, int)[0m' ([36mSingle_Process.C:400[0m)
    0x7f79eec1bbeb  in '[31mPHASIC::Single_Process::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mSingle_Process.C:439[0m)
    0x7f35c1c7963d  in '[31mPHASIC::Process_Group::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mProcess_Group.C:60 (discriminator 2)[0m)
    0x7ffa09ae5beb  in '[31mPHASIC::Single_Process::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mSingle_Process.C:439[0m)
    0x7f0f6bd8fbeb  in '[31mPHASIC::Single_Process::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mSingle_Process.C:439[0m)
    0x7f9bc2649beb  in '[31mPHASIC::Single_Process::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mSingle_Process.C:439[0m)
    0x7f284b48dbeb  in '[31mPHASIC::Single_Process::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mSingle_Process.C:439[0m)
    0x7fda9e94b730  in '[31mCOMIX::Single_Process::Partonic(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, int)[0m' ([36mSingle_Process.C:400[0m)
    0x7fd0d0a4abeb  in '[31mPHASIC::Single_Process::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mSingle_Process.C:439[0m)
    0x7fb96ff3cbeb  in '[31mPHASIC::Single_Process::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mSingle_Process.C:439[0m)
    0x7fbd7a74abeb  in '[31mPHASIC::Single_Process::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mSingle_Process.C:439[0m)
    0x7f9066766beb  in '[31mPHASIC::Single_Process::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mSingle_Process.C:439[0m)
    0x7fb6e1f0dbeb  in '[31mPHASIC::Single_Process::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mSingle_Process.C:439[0m)
    0x7f92fcb09beb  in '[31mPHASIC::Single_Process::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mSingle_Process.C:439[0m)
    0x7f1be9ee863d  in '[31mPHASIC::Process_Group::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mProcess_Group.C:60 (discriminator 2)[0m)
    0x7f79d69cfbeb  in '[31mPHASIC::Single_Process::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mSingle_Process.C:439[0m)
    0x7f10f287d730  in '[31mCOMIX::Single_Process::Partonic(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, int)[0m' ([36mSingle_Process.C:400[0m)
    0x7f51f9a9c52a  in '[31mCOMIX::Cluster_Algorithm::Cluster(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > > const&, std::vector<std::pair<unsigned long, double>, std::allocator<std::pair<unsigned long, double> > >&, int)[0m' ([36mCluster_Algorithm.C:739[0m)
    0x7f515efe3730  in '[31mCOMIX::Single_Process::Partonic(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, int)[0m' ([36mSingle_Process.C:400[0m)
    0x7f59ad9cf63d  in '[31mPHASIC::Process_Group::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mProcess_Group.C:60 (discriminator 2)[0m)
    0x7f08123d363d  in '[31mPHASIC::Process_Group::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mProcess_Group.C:60 (discriminator 2)[0m)
    0x7f0516ef1beb  in '[31mPHASIC::Single_Process::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mSingle_Process.C:439[0m)
    0x7f305309263d  in '[31mPHASIC::Process_Group::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mProcess_Group.C:60 (discriminator 2)[0m)
    0x7f85d3808770  in '[31mSHERPA::Matrix_Element_Handler::CalculateTotalXSecs()[0m' ([36mMatrix_Element_Handler.C:146[0m)
    0x7fda1bc3563d  in '[31mPHASIC::Process_Group::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mProcess_Group.C:60 (discriminator 2)[0m)
    0x7f3a2feed63d  in '[31mPHASIC::Process_Group::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mProcess_Group.C:60 (discriminator 2)[0m)
    0x7fb661d56beb  in '[31mPHASIC::Single_Process::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mSingle_Process.C:439[0m)
    0x7f61f912863d  in '[31mPHASIC::Process_Group::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mProcess_Group.C:60 (discriminator 2)[0m)
    0x7ff69b3ebbeb  in '[31mPHASIC::Single_Process::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mSingle_Process.C:439[0m)
    0x7ffa09ad563d  in '[31mPHASIC::Process_Group::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mProcess_Group.C:60 (discriminator 2)[0m)
    0x7f79eec0b63d  in '[31mPHASIC::Process_Group::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mProcess_Group.C:60 (discriminator 2)[0m)
    0x7f35c1cf9ed9  in '[31mPHASIC::Phase_Space_Handler::CalculateME()[0m' ([36mPhase_Space_Handler.C:251[0m)
    0x7f07a209ec27  in '[31mSHERPA::Initialization_Handler::CalculateTheHardProcesses()[0m' ([36mInitialization_Handler.C:885[0m)
    0x7f9bc263963d  in '[31mPHASIC::Process_Group::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mProcess_Group.C:60 (discriminator 2)[0m)
    0x7f284b47d63d  in '[31mPHASIC::Process_Group::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mProcess_Group.C:60 (discriminator 2)[0m)
    0x7fd0d0a3a63d  in '[31mPHASIC::Process_Group::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mProcess_Group.C:60 (discriminator 2)[0m)
    0x7f0f6bd7f63d  in '[31mPHASIC::Process_Group::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mProcess_Group.C:60 (discriminator 2)[0m)
    0x7fda9e399beb  in '[31mPHASIC::Single_Process::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mSingle_Process.C:439[0m)
    0x7fdfac13b730  in '[31mCOMIX::Single_Process::Partonic(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, int)[0m' ([36mSingle_Process.C:400[0m)
    0x7f1be9f68ed9  in '[31mPHASIC::Phase_Space_Handler::CalculateME()[0m' ([36mPhase_Space_Handler.C:251[0m)
    0x7f515ea31beb  in '[31mPHASIC::Single_Process::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mSingle_Process.C:439[0m)
    0x7fbd7a73a63d  in '[31mPHASIC::Process_Group::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mProcess_Group.C:60 (discriminator 2)[0m)
    0x7f92fcaf963d  in '[31mPHASIC::Process_Group::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mProcess_Group.C:60 (discriminator 2)[0m)
    0x7f906675663d  in '[31mPHASIC::Process_Group::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mProcess_Group.C:60 (discriminator 2)[0m)
    0x7f59ada4fed9  in '[31mPHASIC::Phase_Space_Handler::CalculateME()[0m' ([36mPhase_Space_Handler.C:251[0m)
    0x7f0812453ed9  in '[31mPHASIC::Phase_Space_Handler::CalculateME()[0m' ([36mPhase_Space_Handler.C:251[0m)
    0x7f51f9a9de97  in '[31mCOMIX::Cluster_Algorithm::Cluster(COMIX::Single_Process*, COMIX::Single_Dipole_Term*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mCluster_Algorithm.C:642 (discriminator 2)[0m)
    0x7fb6e1efd63d  in '[31mPHASIC::Process_Group::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mProcess_Group.C:60 (discriminator 2)[0m)
    0x7f0516ee163d  in '[31mPHASIC::Process_Group::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mProcess_Group.C:60 (discriminator 2)[0m)
    0x7fb96ff2c63d  in '[31mPHASIC::Process_Group::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mProcess_Group.C:60 (discriminator 2)[0m)
    0x7f79d69bf63d  in '[31mPHASIC::Process_Group::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mProcess_Group.C:60 (discriminator 2)[0m)
    0x7f3053112ed9  in '[31mPHASIC::Phase_Space_Handler::CalculateME()[0m' ([36mPhase_Space_Handler.C:251[0m)
    0x7f10f22cbbeb  in '[31mPHASIC::Single_Process::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mSingle_Process.C:439[0m)
    0x7fb661d4663d  in '[31mPHASIC::Process_Group::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mProcess_Group.C:60 (discriminator 2)[0m)
    0x7f61f91a8ed9  in '[31mPHASIC::Phase_Space_Handler::CalculateME()[0m' ([36mPhase_Space_Handler.C:251[0m)
    0x7f3a2ff6ded9  in '[31mPHASIC::Phase_Space_Handler::CalculateME()[0m' ([36mPhase_Space_Handler.C:251[0m)
    0x7f79eec8bed9  in '[31mPHASIC::Phase_Space_Handler::CalculateME()[0m' ([36mPhase_Space_Handler.C:251[0m)
    0x7fda1bcb5ed9  in '[31mPHASIC::Phase_Space_Handler::CalculateME()[0m' ([36mPhase_Space_Handler.C:251[0m)
    0x7ff69b3db63d  in '[31mPHASIC::Process_Group::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mProcess_Group.C:60 (discriminator 2)[0m)
    0x7ffa09b55ed9  in '[31mPHASIC::Phase_Space_Handler::CalculateME()[0m' ([36mPhase_Space_Handler.C:251[0m)
    0x7f0f6bdffed9  in '[31mPHASIC::Phase_Space_Handler::CalculateME()[0m' ([36mPhase_Space_Handler.C:251[0m)
    0x7f07a20c9e2f  in '[31mSHERPA::Sherpa::InitializeTheRun(int, char**)[0m' ([36mSherpa.C:126[0m)
    0x7f9bc26b9ed9  in '[31mPHASIC::Phase_Space_Handler::CalculateME()[0m' ([36mPhase_Space_Handler.C:251[0m)
    0x7fd0d0abaed9  in '[31mPHASIC::Phase_Space_Handler::CalculateME()[0m' ([36mPhase_Space_Handler.C:251[0m)
    0x7f35c1cfc06b  in '[31mPHASIC::Phase_Space_Handler::Differential(PHASIC::Process_Integrator*, PHASIC::psm::code)[0m' ([36mPhase_Space_Handler.C:346[0m)
    0x7f284b4fded9  in '[31mPHASIC::Phase_Space_Handler::CalculateME()[0m' ([36mPhase_Space_Handler.C:251[0m)
    0x7fda9e38963d  in '[31mPHASIC::Process_Group::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mProcess_Group.C:60 (discriminator 2)[0m)
    0x3fc3a1ed20    in '[31m__libc_start_main[0m' ([36m??:?[0m)
    0x7f85d3867c27  in '[31mSHERPA::Initialization_Handler::CalculateTheHardProcesses()[0m' ([36mInitialization_Handler.C:885[0m)
    0x7fdfabb89beb  in '[31mPHASIC::Single_Process::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mSingle_Process.C:439[0m)
    0x7f515ea2163d  in '[31mPHASIC::Process_Group::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mProcess_Group.C:60 (discriminator 2)[0m)
    0x7f79d6a3fed9  in '[31mPHASIC::Phase_Space_Handler::CalculateME()[0m' ([36mPhase_Space_Handler.C:251[0m)
    0x7fbd7a7baed9  in '[31mPHASIC::Phase_Space_Handler::CalculateME()[0m' ([36mPhase_Space_Handler.C:251[0m)
    0x7fb96ffaced9  in '[31mPHASIC::Phase_Space_Handler::CalculateME()[0m' ([36mPhase_Space_Handler.C:251[0m)
    0x7f59ada5206b  in '[31mPHASIC::Phase_Space_Handler::Differential(PHASIC::Process_Integrator*, PHASIC::psm::code)[0m' ([36mPhase_Space_Handler.C:346[0m)
    0x7f081245606b  in '[31mPHASIC::Phase_Space_Handler::Differential(PHASIC::Process_Integrator*, PHASIC::psm::code)[0m' ([36mPhase_Space_Handler.C:346[0m)
    0x7f90667d6ed9  in '[31mPHASIC::Phase_Space_Handler::CalculateME()[0m' ([36mPhase_Space_Handler.C:251[0m)
    0x7fb6e1f7ded9  in '[31mPHASIC::Phase_Space_Handler::CalculateME()[0m' ([36mPhase_Space_Handler.C:251[0m)
    0x7f35c1d09404  in '[31mPHASIC::Phase_Space_Integrator::Calculate(double, double, int)[0m' ([36mPhase_Space_Integrator.C:165[0m)
    0x7fb661dc6ed9  in '[31mPHASIC::Phase_Space_Handler::CalculateME()[0m' ([36mPhase_Space_Handler.C:251[0m)
    0x7f3a2ff7006b  in '[31mPHASIC::Phase_Space_Handler::Differential(PHASIC::Process_Integrator*, PHASIC::psm::code)[0m' ([36mPhase_Space_Handler.C:346[0m)
    0x7f92fcb79ed9  in '[31mPHASIC::Phase_Space_Handler::CalculateME()[0m' ([36mPhase_Space_Handler.C:251[0m)
    0x7f61f91ab06b  in '[31mPHASIC::Phase_Space_Handler::Differential(PHASIC::Process_Integrator*, PHASIC::psm::code)[0m' ([36mPhase_Space_Handler.C:346[0m)
    0x7f51f9ad2d84  in '[31mCOMIX::Comix::ClusterConfiguration(PHASIC::Process_Base*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mComix.C:322[0m)
    0x7f79eec8e06b  in '[31mPHASIC::Phase_Space_Handler::Differential(PHASIC::Process_Integrator*, PHASIC::psm::code)[0m' ([36mPhase_Space_Handler.C:346[0m)
    0x7f10f22bb63d  in '[31mPHASIC::Process_Group::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mProcess_Group.C:60 (discriminator 2)[0m)
    0x7f1be9f6b06b  in '[31mPHASIC::Phase_Space_Handler::Differential(PHASIC::Process_Integrator*, PHASIC::psm::code)[0m' ([36mPhase_Space_Handler.C:346[0m)
    0x7f0516f61ed9  in '[31mPHASIC::Phase_Space_Handler::CalculateME()[0m' ([36mPhase_Space_Handler.C:251[0m)
    0x7f0f6be0206b  in '[31mPHASIC::Phase_Space_Handler::Differential(PHASIC::Process_Integrator*, PHASIC::psm::code)[0m' ([36mPhase_Space_Handler.C:346[0m)
    0x7f305311506b  in '[31mPHASIC::Phase_Space_Handler::Differential(PHASIC::Process_Integrator*, PHASIC::psm::code)[0m' ([36mPhase_Space_Handler.C:346[0m)
    0x7f9bc26bc06b  in '[31mPHASIC::Phase_Space_Handler::Differential(PHASIC::Process_Integrator*, PHASIC::psm::code)[0m' ([36mPhase_Space_Handler.C:346[0m)
    0x7ff69b45bed9  in '[31mPHASIC::Phase_Space_Handler::CalculateME()[0m' ([36mPhase_Space_Handler.C:251[0m)
    0x7ffa09b5806b  in '[31mPHASIC::Phase_Space_Handler::Differential(PHASIC::Process_Integrator*, PHASIC::psm::code)[0m' ([36mPhase_Space_Handler.C:346[0m)
    0x7fd0d0abd06b  in '[31mPHASIC::Phase_Space_Handler::Differential(PHASIC::Process_Integrator*, PHASIC::psm::code)[0m' ([36mPhase_Space_Handler.C:346[0m)
    0x7f284b50006b  in '[31mPHASIC::Phase_Space_Handler::Differential(PHASIC::Process_Integrator*, PHASIC::psm::code)[0m' ([36mPhase_Space_Handler.C:346[0m)
    0x7fda1bcb806b  in '[31mPHASIC::Phase_Space_Handler::Differential(PHASIC::Process_Integrator*, PHASIC::psm::code)[0m' ([36mPhase_Space_Handler.C:346[0m)
    0x7f85d3892e2f  in '[31mSHERPA::Sherpa::InitializeTheRun(int, char**)[0m' ([36mSherpa.C:126[0m)
    0x7fda9e409ed9  in '[31mPHASIC::Phase_Space_Handler::CalculateME()[0m' ([36mPhase_Space_Handler.C:251[0m)
    0x7fdfabb7963d  in '[31mPHASIC::Process_Group::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mProcess_Group.C:60 (discriminator 2)[0m)
    0x7f0812463404  in '[31mPHASIC::Phase_Space_Integrator::Calculate(double, double, int)[0m' ([36mPhase_Space_Integrator.C:165[0m)
    0x7f59ada5f404  in '[31mPHASIC::Phase_Space_Integrator::Calculate(double, double, int)[0m' ([36mPhase_Space_Integrator.C:165[0m)
    0x7f61f91b8404  in '[31mPHASIC::Phase_Space_Integrator::Calculate(double, double, int)[0m' ([36mPhase_Space_Integrator.C:165[0m)
    0x7f3a2ff7d404  in '[31mPHASIC::Phase_Space_Integrator::Calculate(double, double, int)[0m' ([36mPhase_Space_Integrator.C:165[0m)
    0x7f0f6be0f404  in '[31mPHASIC::Phase_Space_Integrator::Calculate(double, double, int)[0m' ([36mPhase_Space_Integrator.C:165[0m)
    0x3fc3a1ed20    in '[31m__libc_start_main[0m' ([36m??:?[0m)
    0x7fb96ffaf06b  in '[31mPHASIC::Phase_Space_Handler::Differential(PHASIC::Process_Integrator*, PHASIC::psm::code)[0m' ([36mPhase_Space_Handler.C:346[0m)
    0x7f1be9f78404  in '[31mPHASIC::Phase_Space_Integrator::Calculate(double, double, int)[0m' ([36mPhase_Space_Integrator.C:165[0m)
    0x7f3053122404  in '[31mPHASIC::Phase_Space_Integrator::Calculate(double, double, int)[0m' ([36mPhase_Space_Integrator.C:165[0m)
    0x7fd0d0aca404  in '[31mPHASIC::Phase_Space_Integrator::Calculate(double, double, int)[0m' ([36mPhase_Space_Integrator.C:165[0m)
    0x7f51f93f72a8  in '[31mPHASIC::METS_Scale_Setter::CalculateStrict(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:334[0m)
    0x7fda1bcc5404  in '[31mPHASIC::Phase_Space_Integrator::Calculate(double, double, int)[0m' ([36mPhase_Space_Integrator.C:165[0m)
    0x7f9bc26c9404  in '[31mPHASIC::Phase_Space_Integrator::Calculate(double, double, int)[0m' ([36mPhase_Space_Integrator.C:165[0m)
    0x7fb661dc906b  in '[31mPHASIC::Phase_Space_Handler::Differential(PHASIC::Process_Integrator*, PHASIC::psm::code)[0m' ([36mPhase_Space_Handler.C:346[0m)
    0x7f79d6a4206b  in '[31mPHASIC::Phase_Space_Handler::Differential(PHASIC::Process_Integrator*, PHASIC::psm::code)[0m' ([36mPhase_Space_Handler.C:346[0m)
    0x7f515eaa1ed9  in '[31mPHASIC::Phase_Space_Handler::CalculateME()[0m' ([36mPhase_Space_Handler.C:251[0m)
    0x7f90667d906b  in '[31mPHASIC::Phase_Space_Handler::Differential(PHASIC::Process_Integrator*, PHASIC::psm::code)[0m' ([36mPhase_Space_Handler.C:346[0m)
    0x7fb6e1f8006b  in '[31mPHASIC::Phase_Space_Handler::Differential(PHASIC::Process_Integrator*, PHASIC::psm::code)[0m' ([36mPhase_Space_Handler.C:346[0m)
    0x7f92fcb7c06b  in '[31mPHASIC::Phase_Space_Handler::Differential(PHASIC::Process_Integrator*, PHASIC::psm::code)[0m' ([36mPhase_Space_Handler.C:346[0m)
    0x7f79eec9b404  in '[31mPHASIC::Phase_Space_Integrator::Calculate(double, double, int)[0m' ([36mPhase_Space_Integrator.C:165[0m)
    0x7f35c1d012ff  in '[31mPHASIC::Phase_Space_Handler::Integrate()[0m' ([36mPhase_Space_Handler.C:207 (discriminator 1)[0m)
    0x7ffa09b65404  in '[31mPHASIC::Phase_Space_Integrator::Calculate(double, double, int)[0m' ([36mPhase_Space_Integrator.C:165[0m)
    0x7f0516f6406b  in '[31mPHASIC::Phase_Space_Handler::Differential(PHASIC::Process_Integrator*, PHASIC::psm::code)[0m' ([36mPhase_Space_Handler.C:346[0m)
    0x7f284b50d404  in '[31mPHASIC::Phase_Space_Integrator::Calculate(double, double, int)[0m' ([36mPhase_Space_Integrator.C:165[0m)
    0x7f10f233bed9  in '[31mPHASIC::Phase_Space_Handler::CalculateME()[0m' ([36mPhase_Space_Handler.C:251[0m)
    0x7fbd7a7bd06b  in '[31mPHASIC::Phase_Space_Handler::Differential(PHASIC::Process_Integrator*, PHASIC::psm::code)[0m' ([36mPhase_Space_Handler.C:346[0m)
    0x7ff69b45e06b  in '[31mPHASIC::Phase_Space_Handler::Differential(PHASIC::Process_Integrator*, PHASIC::psm::code)[0m' ([36mPhase_Space_Handler.C:346[0m)
    0x7f90667e6404  in '[31mPHASIC::Phase_Space_Integrator::Calculate(double, double, int)[0m' ([36mPhase_Space_Integrator.C:165[0m)
    0x7fb96ffbc404  in '[31mPHASIC::Phase_Space_Integrator::Calculate(double, double, int)[0m' ([36mPhase_Space_Integrator.C:165[0m)
    0x7f61f91b02ff  in '[31mPHASIC::Phase_Space_Handler::Integrate()[0m' ([36mPhase_Space_Handler.C:207 (discriminator 1)[0m)
    0x7fb6e1f8d404  in '[31mPHASIC::Phase_Space_Integrator::Calculate(double, double, int)[0m' ([36mPhase_Space_Integrator.C:165[0m)
    0x7f081245b2ff  in '[31mPHASIC::Phase_Space_Handler::Integrate()[0m' ([36mPhase_Space_Handler.C:207 (discriminator 1)[0m)
    0x7f59ada572ff  in '[31mPHASIC::Phase_Space_Handler::Integrate()[0m' ([36mPhase_Space_Handler.C:207 (discriminator 1)[0m)
    0x7fda9e40c06b  in '[31mPHASIC::Phase_Space_Handler::Differential(PHASIC::Process_Integrator*, PHASIC::psm::code)[0m' ([36mPhase_Space_Handler.C:346[0m)
    0x7fb661dd6404  in '[31mPHASIC::Phase_Space_Integrator::Calculate(double, double, int)[0m' ([36mPhase_Space_Integrator.C:165[0m)
    0x7fdfabbf9ed9  in '[31mPHASIC::Phase_Space_Handler::CalculateME()[0m' ([36mPhase_Space_Handler.C:251[0m)
    0x7f79d6a4f404  in '[31mPHASIC::Phase_Space_Integrator::Calculate(double, double, int)[0m' ([36mPhase_Space_Integrator.C:165[0m)
    0x7f0516f71404  in '[31mPHASIC::Phase_Space_Integrator::Calculate(double, double, int)[0m' ([36mPhase_Space_Integrator.C:165[0m)
    0x7f92fcb89404  in '[31mPHASIC::Phase_Space_Integrator::Calculate(double, double, int)[0m' ([36mPhase_Space_Integrator.C:165[0m)
    0x7fbd7a7ca404  in '[31mPHASIC::Phase_Space_Integrator::Calculate(double, double, int)[0m' ([36mPhase_Space_Integrator.C:165[0m)
    0x7fd0d0ac22ff  in '[31mPHASIC::Phase_Space_Handler::Integrate()[0m' ([36mPhase_Space_Handler.C:207 (discriminator 1)[0m)
    0x7f51f93faeba  in '[31mPHASIC::METS_Scale_Setter::Calculate(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:368 (discriminator 5)[0m)
    0x7f0f6be072ff  in '[31mPHASIC::Phase_Space_Handler::Integrate()[0m' ([36mPhase_Space_Handler.C:207 (discriminator 1)[0m)
    0x7f3a2ff752ff  in '[31mPHASIC::Phase_Space_Handler::Integrate()[0m' ([36mPhase_Space_Handler.C:207 (discriminator 1)[0m)
    0x7f79eec932ff  in '[31mPHASIC::Phase_Space_Handler::Integrate()[0m' ([36mPhase_Space_Handler.C:207 (discriminator 1)[0m)
    0x7f9bc26c12ff  in '[31mPHASIC::Phase_Space_Handler::Integrate()[0m' ([36mPhase_Space_Handler.C:207 (discriminator 1)[0m)
    0x7f1be9f702ff  in '[31mPHASIC::Phase_Space_Handler::Integrate()[0m' ([36mPhase_Space_Handler.C:207 (discriminator 1)[0m)
    0x7f35c1c79a03  in '[31mPHASIC::Process_Group::CalculateTotalXSec(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)[0m' ([36mProcess_Group.C:180[0m)
    0x7fda1bcbd2ff  in '[31mPHASIC::Phase_Space_Handler::Integrate()[0m' ([36mPhase_Space_Handler.C:207 (discriminator 1)[0m)
    0x7ff69b46b404  in '[31mPHASIC::Phase_Space_Integrator::Calculate(double, double, int)[0m' ([36mPhase_Space_Integrator.C:165[0m)
    0x7f515eaa406b  in '[31mPHASIC::Phase_Space_Handler::Differential(PHASIC::Process_Integrator*, PHASIC::psm::code)[0m' ([36mPhase_Space_Handler.C:346[0m)
    0x7ffa09b5d2ff  in '[31mPHASIC::Phase_Space_Handler::Integrate()[0m' ([36mPhase_Space_Handler.C:207 (discriminator 1)[0m)
    0x7f305311a2ff  in '[31mPHASIC::Phase_Space_Handler::Integrate()[0m' ([36mPhase_Space_Handler.C:207 (discriminator 1)[0m)
    0x7f10f233e06b  in '[31mPHASIC::Phase_Space_Handler::Differential(PHASIC::Process_Integrator*, PHASIC::psm::code)[0m' ([36mPhase_Space_Handler.C:346[0m)
    0x7fda9e419404  in '[31mPHASIC::Phase_Space_Integrator::Calculate(double, double, int)[0m' ([36mPhase_Space_Integrator.C:165[0m)
    0x7f59ad9cfa03  in '[31mPHASIC::Process_Group::CalculateTotalXSec(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)[0m' ([36mProcess_Group.C:180[0m)
    0x7f284b5052ff  in '[31mPHASIC::Phase_Space_Handler::Integrate()[0m' ([36mPhase_Space_Handler.C:207 (discriminator 1)[0m)
    0x7f61f9128a03  in '[31mPHASIC::Process_Group::CalculateTotalXSec(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)[0m' ([36mProcess_Group.C:180[0m)
    0x7fb96ffb42ff  in '[31mPHASIC::Phase_Space_Handler::Integrate()[0m' ([36mPhase_Space_Handler.C:207 (discriminator 1)[0m)
    0x7fdfabbfc06b  in '[31mPHASIC::Phase_Space_Handler::Differential(PHASIC::Process_Integrator*, PHASIC::psm::code)[0m' ([36mPhase_Space_Handler.C:346[0m)
    0x7f08123d3a03  in '[31mPHASIC::Process_Group::CalculateTotalXSec(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)[0m' ([36mProcess_Group.C:180[0m)
    0x7f51f93d1194  in '[31mPHASIC::Scale_Setter_Base::CalculateScale(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long)[0m' ([36mScale_Setter_Base.C:191[0m)
    0x7fb661dce2ff  in '[31mPHASIC::Phase_Space_Handler::Integrate()[0m' ([36mPhase_Space_Handler.C:207 (discriminator 1)[0m)
    0x7f90667de2ff  in '[31mPHASIC::Phase_Space_Handler::Integrate()[0m' ([36mPhase_Space_Handler.C:207 (discriminator 1)[0m)
    0x7f10f234b404  in '[31mPHASIC::Phase_Space_Integrator::Calculate(double, double, int)[0m' ([36mPhase_Space_Integrator.C:165[0m)
    0x7fb6e1f852ff  in '[31mPHASIC::Phase_Space_Handler::Integrate()[0m' ([36mPhase_Space_Handler.C:207 (discriminator 1)[0m)
    0x7f1be9ee8a03  in '[31mPHASIC::Process_Group::CalculateTotalXSec(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)[0m' ([36mProcess_Group.C:180[0m)
    0x7f0f6bd7fa03  in '[31mPHASIC::Process_Group::CalculateTotalXSec(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)[0m' ([36mProcess_Group.C:180[0m)
    0x7f79eec0ba03  in '[31mPHASIC::Process_Group::CalculateTotalXSec(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)[0m' ([36mProcess_Group.C:180[0m)
    0x7fd0d0a3aa03  in '[31mPHASIC::Process_Group::CalculateTotalXSec(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)[0m' ([36mProcess_Group.C:180[0m)
    0x7f515eab1404  in '[31mPHASIC::Phase_Space_Integrator::Calculate(double, double, int)[0m' ([36mPhase_Space_Integrator.C:165[0m)
    0x7f92fcb812ff  in '[31mPHASIC::Phase_Space_Handler::Integrate()[0m' ([36mPhase_Space_Handler.C:207 (discriminator 1)[0m)
    0x7fbd7a7c22ff  in '[31mPHASIC::Phase_Space_Handler::Integrate()[0m' ([36mPhase_Space_Handler.C:207 (discriminator 1)[0m)
    0x7f9bc2639a03  in '[31mPHASIC::Process_Group::CalculateTotalXSec(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)[0m' ([36mProcess_Group.C:180[0m)
    0x7f79d6a472ff  in '[31mPHASIC::Phase_Space_Handler::Integrate()[0m' ([36mPhase_Space_Handler.C:207 (discriminator 1)[0m)
    0x7f0516f692ff  in '[31mPHASIC::Phase_Space_Handler::Integrate()[0m' ([36mPhase_Space_Handler.C:207 (discriminator 1)[0m)
    0x7fda1bc35a03  in '[31mPHASIC::Process_Group::CalculateTotalXSec(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)[0m' ([36mProcess_Group.C:180[0m)
    0x7f3053092a03  in '[31mPHASIC::Process_Group::CalculateTotalXSec(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)[0m' ([36mProcess_Group.C:180[0m)
    0x7ffa09ad5a03  in '[31mPHASIC::Process_Group::CalculateTotalXSec(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)[0m' ([36mProcess_Group.C:180[0m)
    0x7ff69b4632ff  in '[31mPHASIC::Phase_Space_Handler::Integrate()[0m' ([36mPhase_Space_Handler.C:207 (discriminator 1)[0m)
    0x7f3a2feeda03  in '[31mPHASIC::Process_Group::CalculateTotalXSec(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)[0m' ([36mProcess_Group.C:180[0m)
    0x7fdfabc09404  in '[31mPHASIC::Phase_Space_Integrator::Calculate(double, double, int)[0m' ([36mPhase_Space_Integrator.C:165[0m)
    0x7fb96ff2ca03  in '[31mPHASIC::Process_Group::CalculateTotalXSec(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)[0m' ([36mProcess_Group.C:180[0m)
    0x7fda9e4112ff  in '[31mPHASIC::Phase_Space_Handler::Integrate()[0m' ([36mPhase_Space_Handler.C:207 (discriminator 1)[0m)
    0x7f284b47da03  in '[31mPHASIC::Process_Group::CalculateTotalXSec(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)[0m' ([36mProcess_Group.C:180[0m)
    0x7f9066756a03  in '[31mPHASIC::Process_Group::CalculateTotalXSec(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)[0m' ([36mProcess_Group.C:180[0m)
    0x7fbd7a73aa03  in '[31mPHASIC::Process_Group::CalculateTotalXSec(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)[0m' ([36mProcess_Group.C:180[0m)
    0x7fb661d46a03  in '[31mPHASIC::Process_Group::CalculateTotalXSec(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)[0m' ([36mProcess_Group.C:180[0m)
    0x7f92fcaf9a03  in '[31mPHASIC::Process_Group::CalculateTotalXSec(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)[0m' ([36mProcess_Group.C:180[0m)
    0x7fb6e1efda03  in '[31mPHASIC::Process_Group::CalculateTotalXSec(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)[0m' ([36mProcess_Group.C:180[0m)
    0x7f51f9ac2730  in '[31mCOMIX::Single_Process::Partonic(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, int)[0m' ([36mSingle_Process.C:400[0m)
    0x7f35c27ed770  in '[31mSHERPA::Matrix_Element_Handler::CalculateTotalXSecs()[0m' ([36mMatrix_Element_Handler.C:146[0m)
    0x7f515eaa92ff  in '[31mPHASIC::Phase_Space_Handler::Integrate()[0m' ([36mPhase_Space_Handler.C:207 (discriminator 1)[0m)
    0x7f79d69bfa03  in '[31mPHASIC::Process_Group::CalculateTotalXSec(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)[0m' ([36mProcess_Group.C:180[0m)
    0x7ff69b3dba03  in '[31mPHASIC::Process_Group::CalculateTotalXSec(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)[0m' ([36mProcess_Group.C:180[0m)
    0x7f10f23432ff  in '[31mPHASIC::Phase_Space_Handler::Integrate()[0m' ([36mPhase_Space_Handler.C:207 (discriminator 1)[0m)
    0x7f0516ee1a03  in '[31mPHASIC::Process_Group::CalculateTotalXSec(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)[0m' ([36mProcess_Group.C:180[0m)
    0x7f61f9c9c770  in '[31mSHERPA::Matrix_Element_Handler::CalculateTotalXSecs()[0m' ([36mMatrix_Element_Handler.C:146[0m)
    0x7f59ae543770  in '[31mSHERPA::Matrix_Element_Handler::CalculateTotalXSecs()[0m' ([36mMatrix_Element_Handler.C:146[0m)
    0x7f0812f47770  in '[31mSHERPA::Matrix_Element_Handler::CalculateTotalXSecs()[0m' ([36mMatrix_Element_Handler.C:146[0m)
    0x7f9bc31ad770  in '[31mSHERPA::Matrix_Element_Handler::CalculateTotalXSecs()[0m' ([36mMatrix_Element_Handler.C:146[0m)
    0x7fd0d15ae770  in '[31mSHERPA::Matrix_Element_Handler::CalculateTotalXSecs()[0m' ([36mMatrix_Element_Handler.C:146[0m)
    0x7f0f6c8f3770  in '[31mSHERPA::Matrix_Element_Handler::CalculateTotalXSecs()[0m' ([36mMatrix_Element_Handler.C:146[0m)
    0x7f79ef77f770  in '[31mSHERPA::Matrix_Element_Handler::CalculateTotalXSecs()[0m' ([36mMatrix_Element_Handler.C:146[0m)
    0x7fdfabc012ff  in '[31mPHASIC::Phase_Space_Handler::Integrate()[0m' ([36mPhase_Space_Handler.C:207 (discriminator 1)[0m)
    0x7f1beaa5c770  in '[31mSHERPA::Matrix_Element_Handler::CalculateTotalXSecs()[0m' ([36mMatrix_Element_Handler.C:146[0m)
    0x7f51f9510beb  in '[31mPHASIC::Single_Process::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mSingle_Process.C:439[0m)
    0x7fda9e389a03  in '[31mPHASIC::Process_Group::CalculateTotalXSec(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)[0m' ([36mProcess_Group.C:180[0m)
    0x7ffa0a649770  in '[31mSHERPA::Matrix_Element_Handler::CalculateTotalXSecs()[0m' ([36mMatrix_Element_Handler.C:146[0m)
    0x7f515ea21a03  in '[31mPHASIC::Process_Group::CalculateTotalXSec(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)[0m' ([36mProcess_Group.C:180[0m)
    0x7f10f22bba03  in '[31mPHASIC::Process_Group::CalculateTotalXSec(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)[0m' ([36mProcess_Group.C:180[0m)
    0x7f3053c06770  in '[31mSHERPA::Matrix_Element_Handler::CalculateTotalXSecs()[0m' ([36mMatrix_Element_Handler.C:146[0m)
    0x7fda1c7a9770  in '[31mSHERPA::Matrix_Element_Handler::CalculateTotalXSecs()[0m' ([36mMatrix_Element_Handler.C:146[0m)
    0x7f3a30a61770  in '[31mSHERPA::Matrix_Element_Handler::CalculateTotalXSecs()[0m' ([36mMatrix_Element_Handler.C:146[0m)
    0x7fb970aa0770  in '[31mSHERPA::Matrix_Element_Handler::CalculateTotalXSecs()[0m' ([36mMatrix_Element_Handler.C:146[0m)
    0x7fbd7b2ae770  in '[31mSHERPA::Matrix_Element_Handler::CalculateTotalXSecs()[0m' ([36mMatrix_Element_Handler.C:146[0m)
    0x7f284bff1770  in '[31mSHERPA::Matrix_Element_Handler::CalculateTotalXSecs()[0m' ([36mMatrix_Element_Handler.C:146[0m)
    0x7f35c284cc27  in '[31mSHERPA::Initialization_Handler::CalculateTheHardProcesses()[0m' ([36mInitialization_Handler.C:885[0m)
    0x7fb6628ba770  in '[31mSHERPA::Matrix_Element_Handler::CalculateTotalXSecs()[0m' ([36mMatrix_Element_Handler.C:146[0m)
    0x7fb6e2a71770  in '[31mSHERPA::Matrix_Element_Handler::CalculateTotalXSecs()[0m' ([36mMatrix_Element_Handler.C:146[0m)
    0x7f92fd66d770  in '[31mSHERPA::Matrix_Element_Handler::CalculateTotalXSecs()[0m' ([36mMatrix_Element_Handler.C:146[0m)
    0x7f90672ca770  in '[31mSHERPA::Matrix_Element_Handler::CalculateTotalXSecs()[0m' ([36mMatrix_Element_Handler.C:146[0m)
    0x7ff69bf4f770  in '[31mSHERPA::Matrix_Element_Handler::CalculateTotalXSecs()[0m' ([36mMatrix_Element_Handler.C:146[0m)
    0x7f51f950063d  in '[31mPHASIC::Process_Group::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mProcess_Group.C:60 (discriminator 2)[0m)
    0x7fdfabb79a03  in '[31mPHASIC::Process_Group::CalculateTotalXSec(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)[0m' ([36mProcess_Group.C:180[0m)
    0x7f79d7533770  in '[31mSHERPA::Matrix_Element_Handler::CalculateTotalXSecs()[0m' ([36mMatrix_Element_Handler.C:146[0m)
    0x7f0517a55770  in '[31mSHERPA::Matrix_Element_Handler::CalculateTotalXSecs()[0m' ([36mMatrix_Element_Handler.C:146[0m)
    0x7f59ae5a2c27  in '[31mSHERPA::Initialization_Handler::CalculateTheHardProcesses()[0m' ([36mInitialization_Handler.C:885[0m)
    0x7fd0d160dc27  in '[31mSHERPA::Initialization_Handler::CalculateTheHardProcesses()[0m' ([36mInitialization_Handler.C:885[0m)
    0x7f61f9cfbc27  in '[31mSHERPA::Initialization_Handler::CalculateTheHardProcesses()[0m' ([36mInitialization_Handler.C:885[0m)
    0x7f0f6c952c27  in '[31mSHERPA::Initialization_Handler::CalculateTheHardProcesses()[0m' ([36mInitialization_Handler.C:885[0m)
    0x7f0812fa6c27  in '[31mSHERPA::Initialization_Handler::CalculateTheHardProcesses()[0m' ([36mInitialization_Handler.C:885[0m)
    0x7f9bc320cc27  in '[31mSHERPA::Initialization_Handler::CalculateTheHardProcesses()[0m' ([36mInitialization_Handler.C:885[0m)
    0x7f1beaabbc27  in '[31mSHERPA::Initialization_Handler::CalculateTheHardProcesses()[0m' ([36mInitialization_Handler.C:885[0m)
    0x7f79ef7dec27  in '[31mSHERPA::Initialization_Handler::CalculateTheHardProcesses()[0m' ([36mInitialization_Handler.C:885[0m)
    0x7f35c2877e2f  in '[31mSHERPA::Sherpa::InitializeTheRun(int, char**)[0m' ([36mSherpa.C:126[0m)
    0x7fda9eefd770  in '[31mSHERPA::Matrix_Element_Handler::CalculateTotalXSecs()[0m' ([36mMatrix_Element_Handler.C:146[0m)
    0x7fda1c808c27  in '[31mSHERPA::Initialization_Handler::CalculateTheHardProcesses()[0m' ([36mInitialization_Handler.C:885[0m)
    0x7f3a30ac0c27  in '[31mSHERPA::Initialization_Handler::CalculateTheHardProcesses()[0m' ([36mInitialization_Handler.C:885[0m)
    0x7f515f595770  in '[31mSHERPA::Matrix_Element_Handler::CalculateTotalXSecs()[0m' ([36mMatrix_Element_Handler.C:146[0m)
    0x7f3053c65c27  in '[31mSHERPA::Initialization_Handler::CalculateTheHardProcesses()[0m' ([36mInitialization_Handler.C:885[0m)
    0x7f51f9580ed9  in '[31mPHASIC::Phase_Space_Handler::CalculateME()[0m' ([36mPhase_Space_Handler.C:251[0m)
    0x7ffa0a6a8c27  in '[31mSHERPA::Initialization_Handler::CalculateTheHardProcesses()[0m' ([36mInitialization_Handler.C:885[0m)
    0x7f10f2e2f770  in '[31mSHERPA::Matrix_Element_Handler::CalculateTotalXSecs()[0m' ([36mMatrix_Element_Handler.C:146[0m)
    0x7f59ae5cde2f  in '[31mSHERPA::Sherpa::InitializeTheRun(int, char**)[0m' ([36mSherpa.C:126[0m)
    0x7fbd7b30dc27  in '[31mSHERPA::Initialization_Handler::CalculateTheHardProcesses()[0m' ([36mInitialization_Handler.C:885[0m)
    0x7f61f9d26e2f  in '[31mSHERPA::Sherpa::InitializeTheRun(int, char**)[0m' ([36mSherpa.C:126[0m)
    0x7fb970affc27  in '[31mSHERPA::Initialization_Handler::CalculateTheHardProcesses()[0m' ([36mInitialization_Handler.C:885[0m)
    0x7fd0d1638e2f  in '[31mSHERPA::Sherpa::InitializeTheRun(int, char**)[0m' ([36mSherpa.C:126[0m)
    0x7f0812fd1e2f  in '[31mSHERPA::Sherpa::InitializeTheRun(int, char**)[0m' ([36mSherpa.C:126[0m)
    0x7f79ef809e2f  in '[31mSHERPA::Sherpa::InitializeTheRun(int, char**)[0m' ([36mSherpa.C:126[0m)
    0x7fb662919c27  in '[31mSHERPA::Initialization_Handler::CalculateTheHardProcesses()[0m' ([36mInitialization_Handler.C:885[0m)
    0x7f284c050c27  in '[31mSHERPA::Initialization_Handler::CalculateTheHardProcesses()[0m' ([36mInitialization_Handler.C:885[0m)
    0x3fc3a1ed20    in '[31m__libc_start_main[0m' ([36m??:?[0m)
    0x7f1beaae6e2f  in '[31mSHERPA::Sherpa::InitializeTheRun(int, char**)[0m' ([36mSherpa.C:126[0m)
    0x7f0f6c97de2f  in '[31mSHERPA::Sherpa::InitializeTheRun(int, char**)[0m' ([36mSherpa.C:126[0m)
    0x7f9067329c27  in '[31mSHERPA::Initialization_Handler::CalculateTheHardProcesses()[0m' ([36mInitialization_Handler.C:885[0m)
    0x7fb6e2ad0c27  in '[31mSHERPA::Initialization_Handler::CalculateTheHardProcesses()[0m' ([36mInitialization_Handler.C:885[0m)
    0x3fc3a1ed20    in '[31m__libc_start_main[0m' ([36m??:?[0m)
    0x7f79d7592c27  in '[31mSHERPA::Initialization_Handler::CalculateTheHardProcesses()[0m' ([36mInitialization_Handler.C:885[0m)
    0x3fc3a1ed20    in '[31m__libc_start_main[0m' ([36m??:?[0m)
    0x3fc3a1ed20    in '[31m__libc_start_main[0m' ([36m??:?[0m)
    0x7f9bc3237e2f  in '[31mSHERPA::Sherpa::InitializeTheRun(int, char**)[0m' ([36mSherpa.C:126[0m)
    0x7ff69bfaec27  in '[31mSHERPA::Initialization_Handler::CalculateTheHardProcesses()[0m' ([36mInitialization_Handler.C:885[0m)
    0x7f0517ab4c27  in '[31mSHERPA::Initialization_Handler::CalculateTheHardProcesses()[0m' ([36mInitialization_Handler.C:885[0m)
    0x7f92fd6ccc27  in '[31mSHERPA::Initialization_Handler::CalculateTheHardProcesses()[0m' ([36mInitialization_Handler.C:885[0m)
    0x7fdfac6ed770  in '[31mSHERPA::Matrix_Element_Handler::CalculateTotalXSecs()[0m' ([36mMatrix_Element_Handler.C:146[0m)
    0x3fc3a1ed20    in '[31m__libc_start_main[0m' ([36m??:?[0m)
    0x3fc3a1ed20    in '[31m__libc_start_main[0m' ([36m??:?[0m)
    0x3fc3a1ed20    in '[31m__libc_start_main[0m' ([36m??:?[0m)
    0x3fc3a1ed20    in '[31m__libc_start_main[0m' ([36m??:?[0m)
    0x7fda1c833e2f  in '[31mSHERPA::Sherpa::InitializeTheRun(int, char**)[0m' ([36mSherpa.C:126[0m)
    0x3fc3a1ed20    in '[31m__libc_start_main[0m' ([36m??:?[0m)
    0x7f51f958306b  in '[31mPHASIC::Phase_Space_Handler::Differential(PHASIC::Process_Integrator*, PHASIC::psm::code)[0m' ([36mPhase_Space_Handler.C:346[0m)
    0x7f3053c90e2f  in '[31mSHERPA::Sherpa::InitializeTheRun(int, char**)[0m' ([36mSherpa.C:126[0m)
    0x7ffa0a6d3e2f  in '[31mSHERPA::Sherpa::InitializeTheRun(int, char**)[0m' ([36mSherpa.C:126[0m)
    0x7fbd7b338e2f  in '[31mSHERPA::Sherpa::InitializeTheRun(int, char**)[0m' ([36mSherpa.C:126[0m)
    0x7fb970b2ae2f  in '[31mSHERPA::Sherpa::InitializeTheRun(int, char**)[0m' ([36mSherpa.C:126[0m)
    0x3fc3a1ed20    in '[31m__libc_start_main[0m' ([36m??:?[0m)
    0x7f3a30aebe2f  in '[31mSHERPA::Sherpa::InitializeTheRun(int, char**)[0m' ([36mSherpa.C:126[0m)
    0x3fc3a1ed20    in '[31m__libc_start_main[0m' ([36m??:?[0m)
    0x3fc3a1ed20    in '[31m__libc_start_main[0m' ([36m??:?[0m)
    0x3fc3a1ed20    in '[31m__libc_start_main[0m' ([36m??:?[0m)
    0x3fc3a1ed20    in '[31m__libc_start_main[0m' ([36m??:?[0m)
    0x7fda9ef5cc27  in '[31mSHERPA::Initialization_Handler::CalculateTheHardProcesses()[0m' ([36mInitialization_Handler.C:885[0m)
    0x7f0517adfe2f  in '[31mSHERPA::Sherpa::InitializeTheRun(int, char**)[0m' ([36mSherpa.C:126[0m)
    0x7fb662944e2f  in '[31mSHERPA::Sherpa::InitializeTheRun(int, char**)[0m' ([36mSherpa.C:126[0m)
    0x7f10f2e8ec27  in '[31mSHERPA::Initialization_Handler::CalculateTheHardProcesses()[0m' ([36mInitialization_Handler.C:885[0m)
    0x7ff69bfd9e2f  in '[31mSHERPA::Sherpa::InitializeTheRun(int, char**)[0m' ([36mSherpa.C:126[0m)
    0x7f284c07be2f  in '[31mSHERPA::Sherpa::InitializeTheRun(int, char**)[0m' ([36mSherpa.C:126[0m)
    0x7f9067354e2f  in '[31mSHERPA::Sherpa::InitializeTheRun(int, char**)[0m' ([36mSherpa.C:126[0m)
    0x7fb6e2afbe2f  in '[31mSHERPA::Sherpa::InitializeTheRun(int, char**)[0m' ([36mSherpa.C:126[0m)
    0x7f79d75bde2f  in '[31mSHERPA::Sherpa::InitializeTheRun(int, char**)[0m' ([36mSherpa.C:126[0m)
    0x7f92fd6f7e2f  in '[31mSHERPA::Sherpa::InitializeTheRun(int, char**)[0m' ([36mSherpa.C:126[0m)
    0x7f515f5f4c27  in '[31mSHERPA::Initialization_Handler::CalculateTheHardProcesses()[0m' ([36mInitialization_Handler.C:885[0m)
    0x7f51f9590404  in '[31mPHASIC::Phase_Space_Integrator::Calculate(double, double, int)[0m' ([36mPhase_Space_Integrator.C:165[0m)
    0x3fc3a1ed20    in '[31m__libc_start_main[0m' ([36m??:?[0m)
    0x3fc3a1ed20    in '[31m__libc_start_main[0m' ([36m??:?[0m)
    0x3fc3a1ed20    in '[31m__libc_start_main[0m' ([36m??:?[0m)
    0x3fc3a1ed20    in '[31m__libc_start_main[0m' ([36m??:?[0m)
    0x3fc3a1ed20    in '[31m__libc_start_main[0m' ([36m??:?[0m)
    0x3fc3a1ed20    in '[31m__libc_start_main[0m' ([36m??:?[0m)
    0x3fc3a1ed20    in '[31m__libc_start_main[0m' ([36m??:?[0m)
    0x3fc3a1ed20    in '[31m__libc_start_main[0m' ([36m??:?[0m)
    0x3fc3a1ed20    in '[31m__libc_start_main[0m' ([36m??:?[0m)
    0x7fdfac74cc27  in '[31mSHERPA::Initialization_Handler::CalculateTheHardProcesses()[0m' ([36mInitialization_Handler.C:885[0m)
    0x7f10f2eb9e2f  in '[31mSHERPA::Sherpa::InitializeTheRun(int, char**)[0m' ([36mSherpa.C:126[0m)
    0x7fda9ef87e2f  in '[31mSHERPA::Sherpa::InitializeTheRun(int, char**)[0m' ([36mSherpa.C:126[0m)
    0x7f51f95882ff  in '[31mPHASIC::Phase_Space_Handler::Integrate()[0m' ([36mPhase_Space_Handler.C:207 (discriminator 1)[0m)
    0x7f515f61fe2f  in '[31mSHERPA::Sherpa::InitializeTheRun(int, char**)[0m' ([36mSherpa.C:126[0m)
    0x3fc3a1ed20    in '[31m__libc_start_main[0m' ([36m??:?[0m)
    0x3fc3a1ed20    in '[31m__libc_start_main[0m' ([36m??:?[0m)
    0x3fc3a1ed20    in '[31m__libc_start_main[0m' ([36m??:?[0m)
    0x7fdfac777e2f  in '[31mSHERPA::Sherpa::InitializeTheRun(int, char**)[0m' ([36mSherpa.C:126[0m)
    0x7f51f9500a03  in '[31mPHASIC::Process_Group::CalculateTotalXSec(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)[0m' ([36mProcess_Group.C:180[0m)
    0x3fc3a1ed20    in '[31m__libc_start_main[0m' ([36m??:?[0m)
    0x7f51fa074770  in '[31mSHERPA::Matrix_Element_Handler::CalculateTotalXSecs()[0m' ([36mMatrix_Element_Handler.C:146[0m)
    0x7f51fa0d3c27  in '[31mSHERPA::Initialization_Handler::CalculateTheHardProcesses()[0m' ([36mInitialization_Handler.C:885[0m)
    0x7f51fa0fee2f  in '[31mSHERPA::Sherpa::InitializeTheRun(int, char**)[0m' ([36mSherpa.C:126[0m)
    0x3fc3a1ed20    in '[31m__libc_start_main[0m' ([36m??:?[0m)
  [1m}[0m
  Exception_Handler::Terminate(): Pre-crash status saved to '/data/pku/home/xiaoj/sherpa/sherpaday20191111/CMSSW_10_2_18/src/MY/PROJECT/python/SHERPATMP_WH_1/TMP/Status__Mon_Nov_11_23-24-46_2019'.
  WARNING: You are using an unsupported development branch.
  ------------------------------------------------------------------------
  [1mPlease cite the publications listed in '[31mSherpa_References.tex[0m[1m'.[0m
    Extract the bibtex list by running 'get_bibtex Sherpa_References.tex'
    or email the file to 'slaclib2@slac.stanford.edu', subject 'generate'.
  ------------------------------------------------------------------------
  [1mException_Handler::Exit: [0m[34mExiting Sherpa with code [0m[1m([31m2[0m[1m)[0m[?25h
-------------------------------------------------------
Primary job  terminated normally, but 1 process returned
a non-zero exit code.. Per user-direction, the job has been aborted.
-------------------------------------------------------
  [1m}[0m  [1m}[0m  [1m}[0m  [1m}[0m  [1m}[0m  [1m}[0m  [1m}[0m  [1m}[0m  [1m}[0m  [1m}[0m  [1m}[0m  [1m}[0m  [1m}[0m  [1m}[0m  [1m}[0m  [1m}[0m  [1m}[0m  [1m}[0m  [1m}[0m  [1m}[0m  [1m}[0m  [1m}[0m  [1m}[0m  [1m}[0m  [1m}[0m  [1m}[0m  [1m}[0m  [1m}[0m  [1m}[0m--------------------------------------------------------------------------
mpirun detected that one or more processes exited with non-zero status, thus causing
the job to be terminated. The first process to do so was:

  Process name: [[18602,1],0]
  Exit code:    2
--------------------------------------------------------------------------
<I> ...generating events without MPI
Welcome to Sherpa, xiaoj. Initialization of framework underway.
The local time is Mon Nov 11 23:24:47 2019.
Run_Parameter::Init(): Seed mode '*'
Run_Parameter::Init(): Setting memory limit to 125.828 GB.
Random::SetSeed(): Seed set to 1234
-----------------------------------------------------------------------------
-----------    Event generation run with SHERPA started .......   -----------
-----------------------------------------------------------------------------
................................................ |       +                   
................................................ ||  |       +  +            
...................................        ....  | |         /   +           
................. ................   _,_ |  ....  ||         +|  +  +        
...............................  __.'  ,\|  ...  ||    /    +|          +    
.............................. (  \    \   ...  | |  |   + + \         +   
.............................  (    \   -/  .... ||       +    |          +  
........ ...................  <S   /()))))~~~~~~~~##     +     /\    +       
............................ (!H   (~~)))))~~~~~~#/     +  +    |  +         
................ ........... (!E   (~~~)))))     /|/    +         +          
............................ (!R   (~~~)))))   |||   + +            +        
..... ...................... (!P    (~~~~)))   /|  + +          +            
............................ (!A>    (~~~~~~~~~##        + +        +        
............................. ~~(!    '~~~~~~~ \       +     + +      +      
...............................  `~~~QQQQQDb //   |         + + +        +   
........................ ..........   IDDDDP||     \  + + + + +             +
....................................  IDDDI||       \                      + 
.................................... IHD HD||         \ + +  + + + + +      +
...................................  IHD ##|            :-) + +\          +  
......... ............... ......... IHI ## /      /   +  + + + +\       +    
................................... IHI/ /       /      + + + +        +     
................................... ## | | /    / + +      + + /      +      
....................... /TT\ .....  ##/ ///  / + + + + + + +/       +        
......................./TTT/T\ ... /TT\/\\\ / + + + + + + +/   \         +   
....................../TTT/TTTT\...|TT/T\\\/   +    ++  + /              
-----------------------------------------------------------------------------

     SHERPA version 2.2.8 (Cho Oyu)
                                                                             
     Authors:        Enrico Bothmann, Stefan Hoeche, Frank Krauss,           
                     Silvan Kuttimalai, Marek Schoenherr, Holger Schulz,     
                     Steffen Schumann, Frank Siegert, Korinna Zapp           
     Former Authors: Timo Fischer, Tanju Gleisberg, Hendrik Hoeth,           
                     Ralf Kuhn, Thomas Laubrich, Andreas Schaelicke,         
                     Jan Winter                                              
                                                                             
     This program uses a lot of genuine and original research work           
     by other people. Users are encouraged to refer to                       
     the various original publications.                                      
                                                                             
     Users are kindly asked to refer to the documentation                    
     published under JHEP 02(2009)007                                        
                                                                             
     Please visit also our homepage                                          
                                                                             
       http://sherpa.hepforge.org                                            
                                                                             
     for news, bugreports, updates and new releases.                         
                                                                             
-----------------------------------------------------------------------------

WARNING: You are using an unsupported development branch.
Git branch master, revision ed059288d7809e55cf78f39ffb28b1c3d1ba6866.

Beam_Spectra_Handler : 
   type = Monochromatic*Monochromatic
   for    P+  ((6500,0,0,6500))
   and    P+  ((6500,0,0,-6500))
WARNING: M_TOP=0  replacing with SHERPA top mass: M_TOP=173.21
PDF set 'NNPDF30NNLO' loaded for beam 1 (P+).
WARNING: M_TOP=0  replacing with SHERPA top mass: M_TOP=173.21
PDF set 'NNPDF30NNLO' loaded for beam 2 (P+).
Initialized the ISR: (SF)*(SF)
WARNING: M_TOP=0  replacing with SHERPA top mass: M_TOP=173.21
WARNING: M_TOP=0  replacing with SHERPA top mass: M_TOP=173.21
One_Running_AlphaS::One_Running_AlphaS() {
  Setting \alpha_s according to PDF
  perturbative order 2
  \alpha_s(M_Z) = 0.118
}
One_Running_AlphaS::One_Running_AlphaS() {
  Setting \alpha_s according to PDF
  perturbative order 2
  \alpha_s(M_Z) = 0.118
}
 List of Particle Data 
  IDName     kfc  MASS[<kfc>]   WIDTH[<kfc>]  STABLE[<kfc>] MASSIVE[<kfc>]  ACTIVE[<kfc>]  YUKAWA[<kfc>]
       d       1         0.01              0              1              0              1              0
       u       2        0.005              0              1              0              1              0
       s       3          0.2              0              1              0              1              0
       c       4         1.42              0              1              0              1              0
       b       5          4.8              0              1              0              1              0
       t       6       173.21              2              0              1              1         173.21
      e-      11     0.000511              0              1              0              1              0
      ve      12            0              0              1              0              1              0
     mu-      13        0.105              0              1              0              1              0
     vmu      14            0              0              1              0              1              0
    tau-      15        1.777    2.26735e-12              0              0              1              0
    vtau      16            0              0              1              0              1              0
       G      21            0              0              1              0              1              0
       P      22            0              0              1              0              1              0
       Z      23      91.1876         2.4952              0              1              1        91.1876
      W+      24       80.385          2.085              0              1              1         80.385
      h0      25          125        0.00407              0              1              1            125

 List of Particle Containers 
    IDName     kfc     Constituents
         l      90     {e-,e+,mu-,mu+,tau-,tau+}
         v      91     {ve,veb,vmu,vmub,vtau,vtaub}
         j      93     {d,db,u,ub,s,sb,c,cb,b,bb,G}
         Q      94     {d,db,u,ub,s,sb,c,cb,b,bb}
         r      99     {d,db,u,ub,s,sb,c,cb,b,bb,G}

Hadron_Init::Init(): Initializing kf table for hadrons.
Initialized the Fragmentation_Handler.
Initialized the Soft_Collision_Handler.
CS_Shower::CS_Shower(): Set respect Q2 mode 0
CS_Shower::CS_Shower(): Set color setter mode 0
CS_Shower::CS_Shower(): Set respect Q2 mode 0
CS_Shower::CS_Shower(): Set color setter mode 0
Initialized the Shower_Handler.
+-----------------------------------------+
|   X   X   X XXXX  XXX  XXX  XXX         |
|  X X  XX XX X    X      X  X     X   X  |
| X   X X X X XXX  X XXX  X  X    XXX XXX |
| XXXXX X   X X    X   X  X  X     X   X  |
| X   X X   X XXXX  XXX  XXX  XXX         |
+-----------------------------------------+
| please cite: JHEP 0202:044,2002         |
+-----------------------------------------+
ME_Generators::ME_Generators(): Try loading 'OpenLoops' from 'libSherpaOpenLoops'.
ME_Generator_Base::SetPSMasses(): Massive PS flavours for Comix: (c,cb,b,bb,e-,e+,mu-,mu+,tau-,tau+)
+----------------------------------+
|                                  |
|      [31mCCC[0m  [32mOOO[0m  [34mM[0m   [34mM[0m I [33mX[0m   [33mX[0m     |
|     [31mC[0m    [32mO[0m   [32mO[0m [34mMM[0m [34mMM[0m I  [33mX[0m [33mX[0m      |
|     [31mC[0m    [32mO[0m   [32mO[0m [34mM[0m [34mM[0m [34mM[0m I   [33mX[0m       |
|     [31mC[0m    [32mO[0m   [32mO[0m [34mM[0m   [34mM[0m I  [33mX[0m [33mX[0m      |
|      [31mCCC[0m  [32mOOO[0m  [34mM[0m   [34mM[0m I [33mX[0m   [33mX[0m     |
|                                  |
+==================================+
|  Color dressed  Matrix Elements  |
|     http://comix.freacafe.de     |
|   please cite  JHEP12(2008)039   |
+----------------------------------+
ME_Generator_Base::SetPSMasses(): Massive PS flavours for Amegic: (c,cb,b,bb,e-,e+,mu-,mu+,tau-,tau+)
Amegic::Initialize(): Set gauge 1.
Initialising OpenLoops generator from /cvmfs/cms.cern.ch/slc6_amd64_gcc700/external/openloops/2.1.0
####################################################################
#        ___  ___  ____  _  _       __   __  ___   __    ___       #
#       /   \ |__| |__   |\ |  |   /  \ /  \ |__| /__    __/       #
#       \___/ |    |___  | \|  |__ \__/ \__/ |    __/   /__        #
#       You are using OpenLoops 2 to evaluate loop amplitudes      #
#        F. Buccioni, J.-N. Lang, J. Lindert, P. Maierhoefer,      #
#               S. Pozzorini, M. Zoller, H. Zhang                  #
#                Eur.Phys.J. C78 (2018) no.1, 70                   #
####################################################################
Matrix_Element_Handler::BuildProcesses(): Looking for processes ................................................................................ done ( 48 MB, 0s / 0s ).
Matrix_Element_Handler::InitializeProcesses(): Performing tests 
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                       nan
     vs                nan
     =>                nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.
  Amplitude::GaugeTest(): Large deviation {
                      -nan
     vs               -nan
     =>               -nan
  }
.                                                            
         *******************************************        
         *              C O L L I E R              *        
         *                                         *        
         *        Complex One-Loop Library         *        
         *      In Extended Regularizations        *        
         *                                         *        
         *    by A.Denner, S.Dittmaier, L.Hofer    *        
         *                                         *        
         *              version 1.2.4              *        
         *                                         *        
         *******************************************        
                                                            
 done ( 48 MB, 0s / 0s ).
Initialized the Matrix_Element_Handler for the hard processes.
Initialized the Beam_Remnant_Handler.
Hadron_Decay_Map::Read:   Initializing HadronDecays.dat. This may take some time.
Initialized the Hadron_Decay_Handler, Decay model = Hadrons
ME_Generator_Base::SetPSMasses(): Massive PS flavours for Amisic: (c,cb,b,bb,e-,e+,mu-,mu+,tau-,tau+)
Simple_Chain::InitializeProcessList(): Init processes ................................................................................................................................................................................ done.
Grid_Creator::ReadInGrid(): Reading grid Grid_Creator::CreateGrid(): Calculating grid {
Process_Group::CalculateTotalXSec(): Calculate xs for '2_2__j__j__j__j__MPI' (Amisic)
Starting the calculation at 23:24:49. Lean back and enjoy ... .
[34m3.97271e+10 pb[0m +- ( [31m2.44995e+09 pb = 6.16696 %[0m ) 5000 ( 7536 -> 66.3 % )
full optimization:  ( 1s elapsed / 1m 30s left ) [23:24:51]   
[34m3.94381e+10 pb[0m +- ( [31m1.71055e+09 pb = 4.33731 %[0m ) 10000 ( 12643 -> 97.9 % )
full optimization:  ( 2s elapsed / 1m 29s left ) [23:24:52]   
[34m3.91538e+10 pb[0m +- ( [31m1.32094e+09 pb = 3.37371 %[0m ) 15000 ( 17647 -> 99.9 % )
full optimization:  ( 4s elapsed / 1m 27s left ) [23:24:54]   
[34m3.88784e+10 pb[0m +- ( [31m1.08752e+09 pb = 2.79725 %[0m ) 20000 ( 22647 -> 100 % )
full optimization:  ( 5s elapsed / 1m 26s left ) [23:24:55]   
[34m3.84592e+10 pb[0m +- ( [31m9.36414e+08 pb = 2.43482 %[0m ) 25000 ( 27647 -> 100 % )
full optimization:  ( 7s elapsed / 1m 24s left ) [23:24:56]   
[34m3.83899e+10 pb[0m +- ( [31m8.35276e+08 pb = 2.17577 %[0m ) 30000 ( 32647 -> 100 % )
full optimization:  ( 8s elapsed / 1m 23s left ) [23:24:58]   
[34m3.85718e+10 pb[0m +- ( [31m6.92331e+08 pb = 1.79491 %[0m ) 40000 ( 42647 -> 100 % )
full optimization:  ( 11s elapsed / 1m 20s left ) [23:25:01]   
[34m3.84727e+10 pb[0m +- ( [31m5.96577e+08 pb = 1.55065 %[0m ) 50000 ( 52647 -> 100 % )
full optimization:  ( 14s elapsed / 1m 17s left ) [23:25:03]   
[34m3.86597e+10 pb[0m +- ( [31m5.35566e+08 pb = 1.38533 %[0m ) 60000 ( 62647 -> 100 % )
full optimization:  ( 16s elapsed / 1m 15s left ) [23:25:06]   
[34m3.88964e+10 pb[0m +- ( [31m4.91901e+08 pb = 1.26464 %[0m ) 70000 ( 72647 -> 100 % )
full optimization:  ( 19s elapsed / 1m 12s left ) [23:25:09]   
[34m3.90624e+10 pb[0m +- ( [31m4.5653e+08 pb = 1.16872 %[0m ) 80000 ( 82647 -> 100 % )
full optimization:  ( 22s elapsed / 1m 10s left ) [23:25:12]   
[34m3.915e+10 pb[0m +- ( [31m4.2849e+08 pb = 1.09448 %[0m ) 90000 ( 92647 -> 100 % )
full optimization:  ( 25s elapsed / 1m 7s left ) [23:25:15]   
[34m3.93239e+10 pb[0m +- ( [31m4.03714e+08 pb = 1.02664 %[0m ) 100000 ( 102647 -> 100 % )
full optimization:  ( 28s elapsed / 1m 4s left ) [23:25:18]   
[34m3.92152e+10 pb[0m +- ( [31m3.8104e+08 pb = 0.971664 %[0m ) 110000 ( 112647 -> 100 % )
full optimization:  ( 31s elapsed / 1m 1s left ) [23:25:21]   
[34m3.93393e+10 pb[0m +- ( [31m3.63504e+08 pb = 0.924022 %[0m ) 120000 ( 122647 -> 100 % )
full optimization:  ( 34s elapsed / 58s left ) [23:25:24]   
[34m3.93748e+10 pb[0m +- ( [31m3.46937e+08 pb = 0.881114 %[0m ) 130000 ( 132647 -> 100 % )
full optimization:  ( 37s elapsed / 55s left ) [23:25:27]   
[34m3.935e+10 pb[0m +- ( [31m3.32593e+08 pb = 0.845219 %[0m ) 140000 ( 142647 -> 100 % )
full optimization:  ( 40s elapsed / 53s left ) [23:25:30]   
[34m3.91866e+10 pb[0m +- ( [31m3.18959e+08 pb = 0.813948 %[0m ) 150000 ( 152647 -> 100 % )
full optimization:  ( 42s elapsed / 50s left ) [23:25:32]   
[34m3.93045e+10 pb[0m +- ( [31m3.08433e+08 pb = 0.784727 %[0m ) 160000 ( 162647 -> 100 % )
full optimization:  ( 45s elapsed / 47s left ) [23:25:35]   
[34m3.92557e+10 pb[0m +- ( [31m2.97899e+08 pb = 0.758867 %[0m ) 170000 ( 172647 -> 100 % )
full optimization:  ( 48s elapsed / 44s left ) [23:25:38]   
[34m3.91917e+10 pb[0m +- ( [31m2.88948e+08 pb = 0.737269 %[0m ) 180000 ( 182647 -> 100 % )
full optimization:  ( 51s elapsed / 41s left ) [23:25:41]   
[34m3.92053e+10 pb[0m +- ( [31m2.79984e+08 pb = 0.714149 %[0m ) 190000 ( 192647 -> 100 % )
full optimization:  ( 54s elapsed / 38s left ) [23:25:44]   
[34m3.93256e+10 pb[0m +- ( [31m2.73094e+08 pb = 0.694443 %[0m ) 200000 ( 202647 -> 100 % )
full optimization:  ( 57s elapsed / 35s left ) [23:25:47]   
[34m3.93986e+10 pb[0m +- ( [31m2.66244e+08 pb = 0.675771 %[0m ) 210000 ( 212647 -> 100 % )
full optimization:  ( 59s elapsed / 33s left ) [23:25:49]   
[34m3.94596e+10 pb[0m +- ( [31m2.60374e+08 pb = 0.65985 %[0m ) 220000 ( 222647 -> 100 % )
full optimization:  ( 1m 2s elapsed / 30s left ) [23:25:52]   
[34m3.94305e+10 pb[0m +- ( [31m2.53696e+08 pb = 0.643398 %[0m ) 230000 ( 232647 -> 100 % )
integration time:  ( 1m 5s elapsed / 28s left ) [23:25:55]   
[34m3.94928e+10 pb[0m +- ( [31m2.42698e+08 pb = 0.614538 %[0m ) 250000 ( 252647 -> 100 % )
integration time:  ( 1m 11s elapsed / 22s left ) [23:26:01]   
[34m3.95116e+10 pb[0m +- ( [31m2.33763e+08 pb = 0.59163 %[0m ) 270000 ( 272647 -> 100 % )
integration time:  ( 1m 17s elapsed / 16s left ) [23:26:08]   
[34m3.94673e+10 pb[0m +- ( [31m2.24674e+08 pb = 0.569266 %[0m ) 290000 ( 292647 -> 100 % )
integration time:  ( 1m 24s elapsed / 10s left ) [23:26:14]   
[34m3.95006e+10 pb[0m +- ( [31m2.16855e+08 pb = 0.548992 %[0m ) 310000 ( 312647 -> 100 % )
integration time:  ( 1m 30s elapsed / 4s left ) [23:26:20]   
[1m2_2__j__j__j__j__MPI[0m : [34m[1m3.95006e+10 pb[0m +- ( [31m2.16855e+08 pb = 0.548992 %[0m ) [1m exp. eff: [31m0.622777 %[0m
Grid_Creator::CreateGridInternal: Initializing grid for MI.
[?25l   1 % ( 1 s elapsed / 146 s left / 147 s total )      2 % ( 2 s elapsed / 144 s left / 147 s total )      3 % ( 4 s elapsed / 142 s left / 147 s total )      4 % ( 5 s elapsed / 141 s left / 146 s total )      5 % ( 7 s elapsed / 139 s left / 146 s total )      6 % ( 8 s elapsed / 137 s left / 146 s total )      7 % ( 10 s elapsed / 136 s left / 146 s total )      8 % ( 11 s elapsed / 135 s left / 147 s total )      9 % ( 13 s elapsed / 134 s left / 147 s total )      10 % ( 14 s elapsed / 132 s left / 147 s total )      11 % ( 16 s elapsed / 131 s left / 147 s total )      12 % ( 17 s elapsed / 129 s left / 147 s total )      13 % ( 19 s elapsed / 128 s left / 147 s total )      14 % ( 20 s elapsed / 126 s left / 147 s total )      15 % ( 22 s elapsed / 125 s left / 147 s total )      16 % ( 23 s elapsed / 124 s left / 148 s total )      17 % ( 25 s elapsed / 123 s left / 148 s total )      18 % ( 26 s elapsed / 121 s left / 148 s total )      19 % ( 28 s elapsed / 120 s left / 148 s total )      20 % ( 29 s elapsed / 118 s left / 148 s total )      21 % ( 31 s elapsed / 117 s left / 148 s total )      22 % ( 32 s elapsed / 116 s left / 148 s total )      23 % ( 34 s elapsed / 114 s left / 148 s total )      24 % ( 35 s elapsed / 113 s left / 148 s total )      25 % ( 37 s elapsed / 111 s left / 148 s total )      26 % ( 38 s elapsed / 110 s left / 148 s total )      27 % ( 40 s elapsed / 108 s left / 148 s total )      28 % ( 41 s elapsed / 106 s left / 148 s total )      29 % ( 43 s elapsed / 105 s left / 148 s total )      30 % ( 44 s elapsed / 103 s left / 148 s total )      31 % ( 46 s elapsed / 102 s left / 148 s total )      32 % ( 47 s elapsed / 101 s left / 148 s total )      33 % ( 49 s elapsed / 99 s left / 148 s total )      34 % ( 50 s elapsed / 98 s left / 148 s total )      35 % ( 52 s elapsed / 96 s left / 148 s total )      36 % ( 53 s elapsed / 95 s left / 148 s total )      37 % ( 55 s elapsed / 93 s left / 149 s total )      38 % ( 56 s elapsed / 92 s left / 149 s total )      39 % ( 58 s elapsed / 91 s left / 149 s total )      40 % ( 59 s elapsed / 89 s left / 149 s total )      41 % ( 61 s elapsed / 88 s left / 149 s total )      42 % ( 62 s elapsed / 86 s left / 149 s total )      43 % ( 64 s elapsed / 85 s left / 149 s total )      44 % ( 65 s elapsed / 83 s left / 149 s total )      45 % ( 67 s elapsed / 82 s left / 149 s total )      46 % ( 68 s elapsed / 80 s left / 149 s total )      47 % ( 70 s elapsed / 79 s left / 150 s total )      48 % ( 71 s elapsed / 77 s left / 149 s total )      49 % ( 73 s elapsed / 76 s left / 149 s total )      50 % ( 74 s elapsed / 74 s left / 149 s total )      51 % ( 76 s elapsed / 73 s left / 149 s total )      52 % ( 77 s elapsed / 71 s left / 149 s total )      53 % ( 79 s elapsed / 70 s left / 149 s total )      54 % ( 80 s elapsed / 68 s left / 149 s total )      55 % ( 82 s elapsed / 67 s left / 149 s total )      56 % ( 83 s elapsed / 65 s left / 149 s total )      57 % ( 85 s elapsed / 64 s left / 149 s total )      58 % ( 86 s elapsed / 62 s left / 149 s total )      59 % ( 88 s elapsed / 61 s left / 149 s total )      60 % ( 89 s elapsed / 59 s left / 149 s total )      61 % ( 91 s elapsed / 58 s left / 149 s total )      62 % ( 92 s elapsed / 56 s left / 149 s total )      63 % ( 94 s elapsed / 55 s left / 149 s total )      64 % ( 95 s elapsed / 53 s left / 149 s total )      65 % ( 97 s elapsed / 52 s left / 149 s total )      66 % ( 98 s elapsed / 50 s left / 149 s total )      67 % ( 100 s elapsed / 49 s left / 149 s total )      68 % ( 101 s elapsed / 47 s left / 149 s total )      69 % ( 103 s elapsed / 46 s left / 149 s total )      70 % ( 104 s elapsed / 44 s left / 149 s total )      71 % ( 106 s elapsed / 43 s left / 149 s total )      72 % ( 107 s elapsed / 41 s left / 149 s total )      73 % ( 109 s elapsed / 40 s left / 149 s total )      74 % ( 110 s elapsed / 38 s left / 149 s total )      75 % ( 112 s elapsed / 37 s left / 149 s total )      76 % ( 113 s elapsed / 35 s left / 149 s total )      77 % ( 115 s elapsed / 34 s left / 149 s total )      78 % ( 116 s elapsed / 32 s left / 149 s total )      79 % ( 118 s elapsed / 31 s left / 149 s total )      80 % ( 119 s elapsed / 29 s left / 149 s total )      81 % ( 121 s elapsed / 28 s left / 149 s total )      82 % ( 122 s elapsed / 26 s left / 149 s total )      83 % ( 124 s elapsed / 25 s left / 149 s total )      84 % ( 125 s elapsed / 23 s left / 149 s total )      85 % ( 127 s elapsed / 22 s left / 149 s total )      86 % ( 128 s elapsed / 20 s left / 149 s total )      87 % ( 130 s elapsed / 19 s left / 149 s total )      88 % ( 131 s elapsed / 17 s left / 149 s total )      89 % ( 133 s elapsed / 16 s left / 149 s total )      90 % ( 134 s elapsed / 14 s left / 149 s total )      91 % ( 136 s elapsed / 13 s left / 149 s total )      92 % ( 137 s elapsed / 11 s left / 149 s total )      93 % ( 139 s elapsed / 10 s left / 150 s total )      94 % ( 141 s elapsed / 9 s left / 150 s total )      95 % ( 142 s elapsed / 7 s left / 150 s total )      96 % ( 144 s elapsed / 6 s left / 150 s total )      97 % ( 145 s elapsed / 4 s left / 150 s total )      98 % ( 147 s elapsed / 3 s left / 150 s total )      99 % ( 148 s elapsed / 1 s left / 150 s total )   [?25h
}
Simple_Chain::CalculateTotal(): Result is {
   \sigma_{hard} = 39.6455 mb
   at PT_{min} = 4.68991 GeV
}
Profile_Function_Base::CalculateOMean(2.32773): Results are {
   k           = 7.18105
   <\tilde{O}> = 0.324149
}
Initialized the Multiple_Interactions_Handler (MI_Handler).
Initialized the Soft_Photon_Handler.
[31mVariations::InitialiseParametersVector([32m0 variations[31m)[0m[31m{[0m
  Named variations:
[31m}[0m
Process_Group::CalculateTotalXSec(): Calculate xs for '2_6__j__j__h0[W+[l__v]__W-[j__j]]__W+[l__v]' (Comix)
Starting the calculation at 23:28:51. Lean back and enjoy ... .
  
  [1mException_Handler::SignalHandler: [0m[34mSignal [0m[1m([31m11[0m[1m)[0m[34m caught. [0m
  [1mException_Handler::GenerateStackTrace(..): [0m[34mGenerating stack trace [0m[1m
  {[0m
    0x7f68223e485a  in '[31mCOMIX::Cluster_Algorithm::GetMeasure(unsigned long const&, unsigned long const&, unsigned long const&, ATOOLS::Flavour const&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&, int)[0m' ([36mCluster_Algorithm.C:145[0m)
    0x7f68223e80fe  in '[31mCOMIX::Cluster_Algorithm::CalculateMeasures(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&)[0m' ([36mCluster_Algorithm.C:236[0m)
    0x7f68223e9e63  in '[31mCOMIX::Cluster_Algorithm::ClusterStep(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > >&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> >&, METOOLS::Current*&, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&)[0m' ([36mCluster_Algorithm.C:370[0m)
    0x7f68223ec52a  in '[31mCOMIX::Cluster_Algorithm::Cluster(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > > const&, std::vector<std::pair<unsigned long, double>, std::allocator<std::pair<unsigned long, double> > >&, int)[0m' ([36mCluster_Algorithm.C:739[0m)
    0x7f68223ede97  in '[31mCOMIX::Cluster_Algorithm::Cluster(COMIX::Single_Process*, COMIX::Single_Dipole_Term*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mCluster_Algorithm.C:642 (discriminator 2)[0m)
    0x7f6822422d84  in '[31mCOMIX::Comix::ClusterConfiguration(PHASIC::Process_Base*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mComix.C:322[0m)
    0x7f6821d472a8  in '[31mPHASIC::METS_Scale_Setter::CalculateStrict(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:334[0m)
    0x7f6821d4aeba  in '[31mPHASIC::METS_Scale_Setter::Calculate(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:368 (discriminator 5)[0m)
    0x7f6821d21194  in '[31mPHASIC::Scale_Setter_Base::CalculateScale(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long)[0m' ([36mScale_Setter_Base.C:191[0m)
    0x7f6822412730  in '[31mCOMIX::Single_Process::Partonic(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, int)[0m' ([36mSingle_Process.C:400[0m)
    0x7f6821e60beb  in '[31mPHASIC::Single_Process::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mSingle_Process.C:439[0m)
    0x7f6821e5063d  in '[31mPHASIC::Process_Group::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mProcess_Group.C:60 (discriminator 2)[0m)
    0x7f6821ed0ed9  in '[31mPHASIC::Phase_Space_Handler::CalculateME()[0m' ([36mPhase_Space_Handler.C:251[0m)
    0x7f6821ed306b  in '[31mPHASIC::Phase_Space_Handler::Differential(PHASIC::Process_Integrator*, PHASIC::psm::code)[0m' ([36mPhase_Space_Handler.C:346[0m)
    0x7f6821ee0404  in '[31mPHASIC::Phase_Space_Integrator::Calculate(double, double, int)[0m' ([36mPhase_Space_Integrator.C:165[0m)
    0x7f6821ed82ff  in '[31mPHASIC::Phase_Space_Handler::Integrate()[0m' ([36mPhase_Space_Handler.C:207 (discriminator 1)[0m)
    0x7f6821e50a03  in '[31mPHASIC::Process_Group::CalculateTotalXSec(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)[0m' ([36mProcess_Group.C:180[0m)
    0x7f68229c4770  in '[31mSHERPA::Matrix_Element_Handler::CalculateTotalXSecs()[0m' ([36mMatrix_Element_Handler.C:146[0m)
    0x7f6822a23c27  in '[31mSHERPA::Initialization_Handler::CalculateTheHardProcesses()[0m' ([36mInitialization_Handler.C:885[0m)
    0x7f6822a4ee2f  in '[31mSHERPA::Sherpa::InitializeTheRun(int, char**)[0m' ([36mSherpa.C:126[0m)
    0x3fc3a1ed20    in '[31m__libc_start_main[0m' ([36m??:?[0m)
  [1m}[0m[0m   Cannot continue.[0m
  [1mException_Handler::GenerateStackTrace(..): [0m[34mGenerating stack trace [0m[1m
  {[0m
    0x7f68223e485a  in '[31mCOMIX::Cluster_Algorithm::GetMeasure(unsigned long const&, unsigned long const&, unsigned long const&, ATOOLS::Flavour const&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&, int)[0m' ([36mCluster_Algorithm.C:145[0m)
    0x7f68223e80fe  in '[31mCOMIX::Cluster_Algorithm::CalculateMeasures(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&, std::map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > > const&)[0m' ([36mCluster_Algorithm.C:236[0m)
    0x7f68223e9e63  in '[31mCOMIX::Cluster_Algorithm::ClusterStep(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > >&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> >&, METOOLS::Current*&, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > >&, std::map<unsigned long, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<unsigned long, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::map<ATOOLS::Flavour, PDF::CParam, std::less<ATOOLS::Flavour>, std::allocator<std::pair<ATOOLS::Flavour const, PDF::CParam> > > > > > > > > > > >&)[0m' ([36mCluster_Algorithm.C:370[0m)
    0x7f68223ec52a  in '[31mCOMIX::Cluster_Algorithm::Cluster(unsigned long const&, std::map<COMIX::Cluster_Info, double, std::less<COMIX::Cluster_Info>, std::allocator<std::pair<COMIX::Cluster_Info const, double> > > const&, std::vector<METOOLS::Current*, std::allocator<METOOLS::Current*> > const&, METOOLS::Current*, std::multimap<std::pair<unsigned long, unsigned long>, COMIX::Cluster_Info, std::less<std::pair<unsigned long, unsigned long> >, std::allocator<std::pair<std::pair<unsigned long, unsigned long> const, COMIX::Cluster_Info> > > const&, std::vector<std::pair<unsigned long, double>, std::allocator<std::pair<unsigned long, double> > >&, int)[0m' ([36mCluster_Algorithm.C:739[0m)
    0x7f68223ede97  in '[31mCOMIX::Cluster_Algorithm::Cluster(COMIX::Single_Process*, COMIX::Single_Dipole_Term*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mCluster_Algorithm.C:642 (discriminator 2)[0m)
    0x7f6822422d84  in '[31mCOMIX::Comix::ClusterConfiguration(PHASIC::Process_Base*, std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mComix.C:322[0m)
    0x7f6821d472a8  in '[31mPHASIC::METS_Scale_Setter::CalculateStrict(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:334[0m)
    0x7f6821d4aeba  in '[31mPHASIC::METS_Scale_Setter::Calculate(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long const&)[0m' ([36mMETS_Scale_Setter.C:368 (discriminator 5)[0m)
    0x7f6821d21194  in '[31mPHASIC::Scale_Setter_Base::CalculateScale(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, unsigned long)[0m' ([36mScale_Setter_Base.C:191[0m)
    0x7f6822412730  in '[31mCOMIX::Single_Process::Partonic(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&, int)[0m' ([36mSingle_Process.C:400[0m)
    0x7f6821e60beb  in '[31mPHASIC::Single_Process::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mSingle_Process.C:439[0m)
    0x7f6821e5063d  in '[31mPHASIC::Process_Group::Differential(std::vector<ATOOLS::Vec4<double>, std::allocator<ATOOLS::Vec4<double> > > const&)[0m' ([36mProcess_Group.C:60 (discriminator 2)[0m)
    0x7f6821ed0ed9  in '[31mPHASIC::Phase_Space_Handler::CalculateME()[0m' ([36mPhase_Space_Handler.C:251[0m)
    0x7f6821ed306b  in '[31mPHASIC::Phase_Space_Handler::Differential(PHASIC::Process_Integrator*, PHASIC::psm::code)[0m' ([36mPhase_Space_Handler.C:346[0m)
    0x7f6821ee0404  in '[31mPHASIC::Phase_Space_Integrator::Calculate(double, double, int)[0m' ([36mPhase_Space_Integrator.C:165[0m)
    0x7f6821ed82ff  in '[31mPHASIC::Phase_Space_Handler::Integrate()[0m' ([36mPhase_Space_Handler.C:207 (discriminator 1)[0m)
    0x7f6821e50a03  in '[31mPHASIC::Process_Group::CalculateTotalXSec(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)[0m' ([36mProcess_Group.C:180[0m)
    0x7f68229c4770  in '[31mSHERPA::Matrix_Element_Handler::CalculateTotalXSecs()[0m' ([36mMatrix_Element_Handler.C:146[0m)
    0x7f6822a23c27  in '[31mSHERPA::Initialization_Handler::CalculateTheHardProcesses()[0m' ([36mInitialization_Handler.C:885[0m)
    0x7f6822a4ee2f  in '[31mSHERPA::Sherpa::InitializeTheRun(int, char**)[0m' ([36mSherpa.C:126[0m)
    0x3fc3a1ed20    in '[31m__libc_start_main[0m' ([36m??:?[0m)
  [1m}[0m
  Exception_Handler::Terminate(): Pre-crash status saved to '/data/pku/home/xiaoj/sherpa/sherpaday20191111/CMSSW_10_2_18/src/MY/PROJECT/python/SHERPATMP_WH_1/TMP/Status__Mon_Nov_11_23-28-52_2019'.
  WARNING: You are using an unsupported development branch.
  ------------------------------------------------------------------------
  [1mPlease cite the publications listed in '[31mSherpa_References.tex[0m[1m'.[0m
    Extract the bibtex list by running 'get_bibtex Sherpa_References.tex'
    or email the file to 'slaclib2@slac.stanford.edu', subject 'generate'.
  ------------------------------------------------------------------------
  [1mException_Handler::Exit: [0m[34mExiting Sherpa with code [0m[1m([31m2[0m[1m)[0m[?25h
  Thanks for using LHAPDF 6.2.1. Please make sure to cite the paper:
    Eur.Phys.J. C75 (2015) 3, 132  (http://arxiv.org/abs/1412.7420)
 <I> MPI (mult. part. int.) grid located in ./MIG_P+P+_13000_NNPDF30NNLO_2.db ./Status__Mon_Nov_11_23-28-52_2019/MIG_P+P+_13000_NNPDF30NNLO_2
 <I> MPI (mult. part. int.) file found: ./MPI_Cross_Sections.dat
Mon Nov 11 23:28:54 CST 2019
